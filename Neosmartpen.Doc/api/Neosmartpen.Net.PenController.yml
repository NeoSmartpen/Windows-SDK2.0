### YamlMime:ManagedReference
items:
- uid: Neosmartpen.Net.PenController
  commentId: T:Neosmartpen.Net.PenController
  id: PenController
  parent: Neosmartpen.Net
  children:
  - Neosmartpen.Net.PenController.#ctor
  - Neosmartpen.Net.PenController.AddAvailableNote
  - Neosmartpen.Net.PenController.AddAvailableNote(System.Int32,System.Int32,System.Int32[])
  - Neosmartpen.Net.PenController.AddAvailableNote(System.Int32[],System.Int32[])
  - Neosmartpen.Net.PenController.Authenticated
  - Neosmartpen.Net.PenController.AutoPowerOffTimeChanged
  - Neosmartpen.Net.PenController.AutoPowerOnChanged
  - Neosmartpen.Net.PenController.AvailableNoteAdded
  - Neosmartpen.Net.PenController.BatteryAlarmReceived
  - Neosmartpen.Net.PenController.BeepAndLightChanged
  - Neosmartpen.Net.PenController.BeepSoundChanged
  - Neosmartpen.Net.PenController.BtLocalNameChanged
  - Neosmartpen.Net.PenController.Connected
  - Neosmartpen.Net.PenController.CreateProfile(System.String,System.Byte[])
  - Neosmartpen.Net.PenController.DataTransmissionTypeChanged
  - Neosmartpen.Net.PenController.DeleteProfile(System.String,System.Byte[])
  - Neosmartpen.Net.PenController.DeleteProfileValues(System.String,System.Byte[],System.String[])
  - Neosmartpen.Net.PenController.Disconnected
  - Neosmartpen.Net.PenController.DotReceived
  - Neosmartpen.Net.PenController.DownSamplingChanged
  - Neosmartpen.Net.PenController.ErrorDetected
  - Neosmartpen.Net.PenController.FirmwareInstallationFinished
  - Neosmartpen.Net.PenController.FirmwareInstallationStarted
  - Neosmartpen.Net.PenController.FirmwareInstallationStatusUpdated
  - Neosmartpen.Net.PenController.FscSensitivityChanged
  - Neosmartpen.Net.PenController.GetPressureCalibrationFactor(System.Int32)
  - Neosmartpen.Net.PenController.GetProfileInfo(System.String)
  - Neosmartpen.Net.PenController.HoverChanged
  - Neosmartpen.Net.PenController.InputPassword(System.String)
  - Neosmartpen.Net.PenController.IsSupportPenProfile
  - Neosmartpen.Net.PenController.OfflineDataChanged
  - Neosmartpen.Net.PenController.OfflineDataDownloadStarted
  - Neosmartpen.Net.PenController.OfflineDataListReceived
  - Neosmartpen.Net.PenController.OfflineDataRemoved
  - Neosmartpen.Net.PenController.OfflineDownloadFinished
  - Neosmartpen.Net.PenController.OfflineStrokeReceived
  - Neosmartpen.Net.PenController.OnConnected
  - Neosmartpen.Net.PenController.OnDataReceived(System.Byte[])
  - Neosmartpen.Net.PenController.OnDisconnected
  - Neosmartpen.Net.PenController.PasswordChanged
  - Neosmartpen.Net.PenController.PasswordRequested
  - Neosmartpen.Net.PenController.PenCapPowerOnOffChanged
  - Neosmartpen.Net.PenController.PenClient
  - Neosmartpen.Net.PenController.PenColorChanged
  - Neosmartpen.Net.PenController.PenProfileReceived
  - Neosmartpen.Net.PenController.PenStatusReceived
  - Neosmartpen.Net.PenController.Protocol
  - Neosmartpen.Net.PenController.ReadProfileValues(System.String,System.String[])
  - Neosmartpen.Net.PenController.RequestBeepAndLight
  - Neosmartpen.Net.PenController.RequestFirmwareInstallation(System.String,System.String)
  - Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32)
  - Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32[])
  - Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32[])
  - Neosmartpen.Net.PenController.RequestOfflineDataList
  - Neosmartpen.Net.PenController.RequestPenStatus
  - Neosmartpen.Net.PenController.RequestRemoveOfflineData(System.Int32,System.Int32,System.Int32[])
  - Neosmartpen.Net.PenController.RtcTimeChanged
  - Neosmartpen.Net.PenController.SensitivityChanged
  - Neosmartpen.Net.PenController.SetAutoPowerOffTime(System.Int16)
  - Neosmartpen.Net.PenController.SetAutoPowerOnEnable(System.Boolean)
  - Neosmartpen.Net.PenController.SetBeepSoundEnable(System.Boolean)
  - Neosmartpen.Net.PenController.SetBtLocalName(System.String)
  - Neosmartpen.Net.PenController.SetColor(System.Int32)
  - Neosmartpen.Net.PenController.SetDataTransmissionType(Neosmartpen.Net.DataTransmissionType)
  - Neosmartpen.Net.PenController.SetDownSampling(System.Boolean)
  - Neosmartpen.Net.PenController.SetFscSensitivity(System.Int16)
  - Neosmartpen.Net.PenController.SetOfflineDataEnable(System.Boolean)
  - Neosmartpen.Net.PenController.SetPassword(System.String,System.String)
  - Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable(System.Boolean)
  - Neosmartpen.Net.PenController.SetPressureCalibrateFactor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - Neosmartpen.Net.PenController.SetRtcTime(System.Int64)
  - Neosmartpen.Net.PenController.SetSensitivity(System.Int16)
  - Neosmartpen.Net.PenController.SetUsbMode(Neosmartpen.Net.UsbMode)
  - Neosmartpen.Net.PenController.SuspendFirmwareInstallation
  - Neosmartpen.Net.PenController.UsbModeChanged
  - Neosmartpen.Net.PenController.WriteProfileValues(System.String,System.Byte[],System.String[],System.Byte[][])
  langs:
  - csharp
  - vb
  name: PenController
  nameWithType: PenController
  fullName: Neosmartpen.Net.PenController
  type: Class
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenController
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 7
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  syntax:
    content: public class PenController
    content.vb: Public Class PenController
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Neosmartpen.Net.PenController.Protocol
  commentId: P:Neosmartpen.Net.PenController.Protocol
  id: Protocol
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: PenController.Protocol
  fullName: Neosmartpen.Net.PenController.Protocol
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Protocol
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 13
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Get Protocol version
  example: []
  syntax:
    content: public int Protocol { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Protocol As Integer
  overload: Neosmartpen.Net.PenController.Protocol*
- uid: Neosmartpen.Net.PenController.#ctor
  commentId: M:Neosmartpen.Net.PenController.#ctor
  id: '#ctor'
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenController()
  nameWithType: PenController.PenController()
  fullName: Neosmartpen.Net.PenController.PenController()
  type: Constructor
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: .ctor
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 15
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  syntax:
    content: public PenController()
    content.vb: Public Sub New()
  overload: Neosmartpen.Net.PenController.#ctor*
  nameWithType.vb: PenController.New()
  fullName.vb: Neosmartpen.Net.PenController.New()
  name.vb: New()
- uid: Neosmartpen.Net.PenController.PenClient
  commentId: P:Neosmartpen.Net.PenController.PenClient
  id: PenClient
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenClient
  nameWithType: PenController.PenClient
  fullName: Neosmartpen.Net.PenController.PenClient
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenClient
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 24
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Gets binded PenClient
  example: []
  syntax:
    content: public IPenClient PenClient { get; set; }
    parameters: []
    return:
      type: Neosmartpen.Net.IPenClient
    content.vb: Public Property PenClient As IPenClient
  overload: Neosmartpen.Net.PenController.PenClient*
- uid: Neosmartpen.Net.PenController.OnDataReceived(System.Byte[])
  commentId: M:Neosmartpen.Net.PenController.OnDataReceived(System.Byte[])
  id: OnDataReceived(System.Byte[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OnDataReceived(byte[])
  nameWithType: PenController.OnDataReceived(byte[])
  fullName: Neosmartpen.Net.PenController.OnDataReceived(byte[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OnDataReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 38
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Fired when read data, override to parse data in your implementation
  example: []
  syntax:
    content: public void OnDataReceived(byte[] buff)
    parameters:
    - id: buff
      type: System.Byte[]
      description: byte array of new data
    content.vb: Public Sub OnDataReceived(buff As Byte())
  overload: Neosmartpen.Net.PenController.OnDataReceived*
  nameWithType.vb: PenController.OnDataReceived(Byte())
  fullName.vb: Neosmartpen.Net.PenController.OnDataReceived(Byte())
  name.vb: OnDataReceived(Byte())
- uid: Neosmartpen.Net.PenController.Connected
  commentId: E:Neosmartpen.Net.PenController.Connected
  id: Connected
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: Connected
  nameWithType: PenController.Connected
  fullName: Neosmartpen.Net.PenController.Connected
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Connected
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 54
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when a connection is made
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, ConnectedEventArgs> Connected
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ConnectedEventArgs}
    content.vb: Public Event Connected As TypedEventHandler(Of IPenClient, ConnectedEventArgs)
- uid: Neosmartpen.Net.PenController.Disconnected
  commentId: E:Neosmartpen.Net.PenController.Disconnected
  id: Disconnected
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: Disconnected
  nameWithType: PenController.Disconnected
  fullName: Neosmartpen.Net.PenController.Disconnected
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Disconnected
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 77
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when a connection is closed
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, object> Disconnected
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
    content.vb: Public Event Disconnected As TypedEventHandler(Of IPenClient, Object)
- uid: Neosmartpen.Net.PenController.OfflineDownloadFinished
  commentId: E:Neosmartpen.Net.PenController.OfflineDownloadFinished
  id: OfflineDownloadFinished
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineDownloadFinished
  nameWithType: PenController.OfflineDownloadFinished
  fullName: Neosmartpen.Net.PenController.OfflineDownloadFinished
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineDownloadFinished
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 100
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when finished offline data downloading
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> OfflineDownloadFinished
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event OfflineDownloadFinished As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.Authenticated
  commentId: E:Neosmartpen.Net.PenController.Authenticated
  id: Authenticated
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: Authenticated
  nameWithType: PenController.Authenticated
  fullName: Neosmartpen.Net.PenController.Authenticated
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Authenticated
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 123
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when authentication is complete, the password entered has been verified.
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, object> Authenticated
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
    content.vb: Public Event Authenticated As TypedEventHandler(Of IPenClient, Object)
- uid: Neosmartpen.Net.PenController.AvailableNoteAdded
  commentId: E:Neosmartpen.Net.PenController.AvailableNoteAdded
  id: AvailableNoteAdded
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AvailableNoteAdded
  nameWithType: PenController.AvailableNoteAdded
  fullName: Neosmartpen.Net.PenController.AvailableNoteAdded
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AvailableNoteAdded
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 138
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the note information to be used is added
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, object> AvailableNoteAdded
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
    content.vb: Public Event AvailableNoteAdded As TypedEventHandler(Of IPenClient, Object)
- uid: Neosmartpen.Net.PenController.AutoPowerOnChanged
  commentId: E:Neosmartpen.Net.PenController.AutoPowerOnChanged
  id: AutoPowerOnChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AutoPowerOnChanged
  nameWithType: PenController.AutoPowerOnChanged
  fullName: Neosmartpen.Net.PenController.AutoPowerOnChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AutoPowerOnChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 153
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the power-on setting is applied when the pen tip is pressed
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> AutoPowerOnChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event AutoPowerOnChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.AutoPowerOffTimeChanged
  commentId: E:Neosmartpen.Net.PenController.AutoPowerOffTimeChanged
  id: AutoPowerOffTimeChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AutoPowerOffTimeChanged
  nameWithType: PenController.AutoPowerOffTimeChanged
  fullName: Neosmartpen.Net.PenController.AutoPowerOffTimeChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AutoPowerOffTimeChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 168
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the power-off setting is applied when there is no input for a certain period of time
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> AutoPowerOffTimeChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event AutoPowerOffTimeChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.BeepSoundChanged
  commentId: E:Neosmartpen.Net.PenController.BeepSoundChanged
  id: BeepSoundChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: BeepSoundChanged
  nameWithType: PenController.BeepSoundChanged
  fullName: Neosmartpen.Net.PenController.BeepSoundChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: BeepSoundChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 183
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the beep setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> BeepSoundChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event BeepSoundChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.PenCapPowerOnOffChanged
  commentId: E:Neosmartpen.Net.PenController.PenCapPowerOnOffChanged
  id: PenCapPowerOnOffChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenCapPowerOnOffChanged
  nameWithType: PenController.PenCapPowerOnOffChanged
  fullName: Neosmartpen.Net.PenController.PenCapPowerOnOffChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenCapPowerOnOffChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 198
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the cap is closed and the power-on and power-off setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> PenCapPowerOnOffChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event PenCapPowerOnOffChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.PenColorChanged
  commentId: E:Neosmartpen.Net.PenController.PenColorChanged
  id: PenColorChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenColorChanged
  nameWithType: PenController.PenColorChanged
  fullName: Neosmartpen.Net.PenController.PenColorChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenColorChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 213
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new LED color value is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> PenColorChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event PenColorChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.HoverChanged
  commentId: E:Neosmartpen.Net.PenController.HoverChanged
  id: HoverChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: HoverChanged
  nameWithType: PenController.HoverChanged
  fullName: Neosmartpen.Net.PenController.HoverChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: HoverChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 225
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> HoverChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event HoverChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.OfflineDataChanged
  commentId: E:Neosmartpen.Net.PenController.OfflineDataChanged
  id: OfflineDataChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineDataChanged
  nameWithType: PenController.OfflineDataChanged
  fullName: Neosmartpen.Net.PenController.OfflineDataChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineDataChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 240
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when settings to store offline data are applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> OfflineDataChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event OfflineDataChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.PasswordRequested
  commentId: E:Neosmartpen.Net.PenController.PasswordRequested
  id: PasswordRequested
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PasswordRequested
  nameWithType: PenController.PasswordRequested
  fullName: Neosmartpen.Net.PenController.PasswordRequested
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PasswordRequested
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 255
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when requesting a password when the pen is locked with a password
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, PasswordRequestedEventArgs> PasswordRequested
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PasswordRequestedEventArgs}
    content.vb: Public Event PasswordRequested As TypedEventHandler(Of IPenClient, PasswordRequestedEventArgs)
- uid: Neosmartpen.Net.PenController.PasswordChanged
  commentId: E:Neosmartpen.Net.PenController.PasswordChanged
  id: PasswordChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PasswordChanged
  nameWithType: PenController.PasswordChanged
  fullName: Neosmartpen.Net.PenController.PasswordChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PasswordChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 270
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new password is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> PasswordChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event PasswordChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.SensitivityChanged
  commentId: E:Neosmartpen.Net.PenController.SensitivityChanged
  id: SensitivityChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SensitivityChanged
  nameWithType: PenController.SensitivityChanged
  fullName: Neosmartpen.Net.PenController.SensitivityChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SensitivityChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 285
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new fsr sensitivity setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> SensitivityChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event SensitivityChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.FscSensitivityChanged
  commentId: E:Neosmartpen.Net.PenController.FscSensitivityChanged
  id: FscSensitivityChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: FscSensitivityChanged
  nameWithType: PenController.FscSensitivityChanged
  fullName: Neosmartpen.Net.PenController.FscSensitivityChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FscSensitivityChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 300
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new fsc sensitivity setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> FscSensitivityChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event FscSensitivityChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.RtcTimeChanged
  commentId: E:Neosmartpen.Net.PenController.RtcTimeChanged
  id: RtcTimeChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RtcTimeChanged
  nameWithType: PenController.RtcTimeChanged
  fullName: Neosmartpen.Net.PenController.RtcTimeChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RtcTimeChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 315
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when pen's RTC time is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> RtcTimeChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event RtcTimeChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.BeepAndLightChanged
  commentId: E:Neosmartpen.Net.PenController.BeepAndLightChanged
  id: BeepAndLightChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: BeepAndLightChanged
  nameWithType: PenController.BeepAndLightChanged
  fullName: Neosmartpen.Net.PenController.BeepAndLightChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: BeepAndLightChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 330
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when pen's beep and light is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> BeepAndLightChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event BeepAndLightChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.BtLocalNameChanged
  commentId: E:Neosmartpen.Net.PenController.BtLocalNameChanged
  id: BtLocalNameChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: BtLocalNameChanged
  nameWithType: PenController.BtLocalNameChanged
  fullName: Neosmartpen.Net.PenController.BtLocalNameChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: BtLocalNameChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 345
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new bt local name setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> BtLocalNameChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event BtLocalNameChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.DataTransmissionTypeChanged
  commentId: E:Neosmartpen.Net.PenController.DataTransmissionTypeChanged
  id: DataTransmissionTypeChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: DataTransmissionTypeChanged
  nameWithType: PenController.DataTransmissionTypeChanged
  fullName: Neosmartpen.Net.PenController.DataTransmissionTypeChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: DataTransmissionTypeChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 360
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new data transmission type setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> DataTransmissionTypeChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event DataTransmissionTypeChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.DownSamplingChanged
  commentId: E:Neosmartpen.Net.PenController.DownSamplingChanged
  id: DownSamplingChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: DownSamplingChanged
  nameWithType: PenController.DownSamplingChanged
  fullName: Neosmartpen.Net.PenController.DownSamplingChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: DownSamplingChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 376
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new down sampling setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> DownSamplingChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event DownSamplingChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.UsbModeChanged
  commentId: E:Neosmartpen.Net.PenController.UsbModeChanged
  id: UsbModeChanged
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: UsbModeChanged
  nameWithType: PenController.UsbModeChanged
  fullName: Neosmartpen.Net.PenController.UsbModeChanged
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: UsbModeChanged
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 391
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's new usb mode setting is applied
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> UsbModeChanged
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event UsbModeChanged As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.BatteryAlarmReceived
  commentId: E:Neosmartpen.Net.PenController.BatteryAlarmReceived
  id: BatteryAlarmReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: BatteryAlarmReceived
  nameWithType: PenController.BatteryAlarmReceived
  fullName: Neosmartpen.Net.PenController.BatteryAlarmReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: BatteryAlarmReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 406
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when the pen's battery status changes
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, BatteryAlarmReceivedEventArgs> BatteryAlarmReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.BatteryAlarmReceivedEventArgs}
    content.vb: Public Event BatteryAlarmReceived As TypedEventHandler(Of IPenClient, BatteryAlarmReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.DotReceived
  commentId: E:Neosmartpen.Net.PenController.DotReceived
  id: DotReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: DotReceived
  nameWithType: PenController.DotReceived
  fullName: Neosmartpen.Net.PenController.DotReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: DotReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 421
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when new coordinate data is received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, DotReceivedEventArgs> DotReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.DotReceivedEventArgs}
    content.vb: Public Event DotReceived As TypedEventHandler(Of IPenClient, DotReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.FirmwareInstallationFinished
  commentId: E:Neosmartpen.Net.PenController.FirmwareInstallationFinished
  id: FirmwareInstallationFinished
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: FirmwareInstallationFinished
  nameWithType: PenController.FirmwareInstallationFinished
  fullName: Neosmartpen.Net.PenController.FirmwareInstallationFinished
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FirmwareInstallationFinished
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 436
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when firmware installation is complete
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> FirmwareInstallationFinished
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event FirmwareInstallationFinished As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.FirmwareInstallationStarted
  commentId: E:Neosmartpen.Net.PenController.FirmwareInstallationStarted
  id: FirmwareInstallationStarted
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: FirmwareInstallationStarted
  nameWithType: PenController.FirmwareInstallationStarted
  fullName: Neosmartpen.Net.PenController.FirmwareInstallationStarted
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FirmwareInstallationStarted
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 451
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when firmware installation is started
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, object> FirmwareInstallationStarted
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
    content.vb: Public Event FirmwareInstallationStarted As TypedEventHandler(Of IPenClient, Object)
- uid: Neosmartpen.Net.PenController.FirmwareInstallationStatusUpdated
  commentId: E:Neosmartpen.Net.PenController.FirmwareInstallationStatusUpdated
  id: FirmwareInstallationStatusUpdated
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: FirmwareInstallationStatusUpdated
  nameWithType: PenController.FirmwareInstallationStatusUpdated
  fullName: Neosmartpen.Net.PenController.FirmwareInstallationStatusUpdated
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FirmwareInstallationStatusUpdated
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 466
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Notice the progress while the firmware installation is in progress
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, ProgressChangeEventArgs> FirmwareInstallationStatusUpdated
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ProgressChangeEventArgs}
    content.vb: Public Event FirmwareInstallationStatusUpdated As TypedEventHandler(Of IPenClient, ProgressChangeEventArgs)
- uid: Neosmartpen.Net.PenController.OfflineDataListReceived
  commentId: E:Neosmartpen.Net.PenController.OfflineDataListReceived
  id: OfflineDataListReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineDataListReceived
  nameWithType: PenController.OfflineDataListReceived
  fullName: Neosmartpen.Net.PenController.OfflineDataListReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineDataListReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 481
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when a list of offline data is received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, OfflineDataListReceivedEventArgs> OfflineDataListReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineDataListReceivedEventArgs}
    content.vb: Public Event OfflineDataListReceived As TypedEventHandler(Of IPenClient, OfflineDataListReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.OfflineStrokeReceived
  commentId: E:Neosmartpen.Net.PenController.OfflineStrokeReceived
  id: OfflineStrokeReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineStrokeReceived
  nameWithType: PenController.OfflineStrokeReceived
  fullName: Neosmartpen.Net.PenController.OfflineStrokeReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineStrokeReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 496
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when an offline stroke is received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, OfflineStrokeReceivedEventArgs> OfflineStrokeReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineStrokeReceivedEventArgs}
    content.vb: Public Event OfflineStrokeReceived As TypedEventHandler(Of IPenClient, OfflineStrokeReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.PenStatusReceived
  commentId: E:Neosmartpen.Net.PenController.PenStatusReceived
  id: PenStatusReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenStatusReceived
  nameWithType: PenController.PenStatusReceived
  fullName: Neosmartpen.Net.PenController.PenStatusReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenStatusReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 511
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when a status of pen is received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, PenStatusReceivedEventArgs> PenStatusReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenStatusReceivedEventArgs}
    content.vb: Public Event PenStatusReceived As TypedEventHandler(Of IPenClient, PenStatusReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.OfflineDataRemoved
  commentId: E:Neosmartpen.Net.PenController.OfflineDataRemoved
  id: OfflineDataRemoved
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineDataRemoved
  nameWithType: PenController.OfflineDataRemoved
  fullName: Neosmartpen.Net.PenController.OfflineDataRemoved
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineDataRemoved
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 526
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when an offline data is removed
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, SimpleResultEventArgs> OfflineDataRemoved
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
    content.vb: Public Event OfflineDataRemoved As TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
- uid: Neosmartpen.Net.PenController.OfflineDataDownloadStarted
  commentId: E:Neosmartpen.Net.PenController.OfflineDataDownloadStarted
  id: OfflineDataDownloadStarted
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OfflineDataDownloadStarted
  nameWithType: PenController.OfflineDataDownloadStarted
  fullName: Neosmartpen.Net.PenController.OfflineDataDownloadStarted
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OfflineDataDownloadStarted
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 541
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when offline downloading starts
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, object> OfflineDataDownloadStarted
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
    content.vb: Public Event OfflineDataDownloadStarted As TypedEventHandler(Of IPenClient, Object)
- uid: Neosmartpen.Net.PenController.PenProfileReceived
  commentId: E:Neosmartpen.Net.PenController.PenProfileReceived
  id: PenProfileReceived
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: PenProfileReceived
  nameWithType: PenController.PenProfileReceived
  fullName: Neosmartpen.Net.PenController.PenProfileReceived
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenProfileReceived
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 556
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when a response to an operation request for a pen profile is received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, PenProfileReceivedEventArgs> PenProfileReceived
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenProfileReceivedEventArgs}
    content.vb: Public Event PenProfileReceived As TypedEventHandler(Of IPenClient, PenProfileReceivedEventArgs)
- uid: Neosmartpen.Net.PenController.ErrorDetected
  commentId: E:Neosmartpen.Net.PenController.ErrorDetected
  id: ErrorDetected
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: ErrorDetected
  nameWithType: PenController.ErrorDetected
  fullName: Neosmartpen.Net.PenController.ErrorDetected
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: ErrorDetected
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 572
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Occurs when error received
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, ErrorDetectedEventArgs> ErrorDetected
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ErrorDetectedEventArgs}
    content.vb: Public Event ErrorDetected As TypedEventHandler(Of IPenClient, ErrorDetectedEventArgs)
- uid: Neosmartpen.Net.PenController.SetPassword(System.String,System.String)
  commentId: M:Neosmartpen.Net.PenController.SetPassword(System.String,System.String)
  id: SetPassword(System.String,System.String)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetPassword(string, string)
  nameWithType: PenController.SetPassword(string, string)
  fullName: Neosmartpen.Net.PenController.SetPassword(string, string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetPassword
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 591
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Change password
  example: []
  syntax:
    content: public bool SetPassword(string oldone, string newone = "")
    parameters:
    - id: oldone
      type: System.String
      description: old password
    - id: newone
      type: System.String
      description: new password
    return:
      type: System.Boolean
    content.vb: Public Function SetPassword(oldone As String, newone As String = "") As Boolean
  overload: Neosmartpen.Net.PenController.SetPassword*
  nameWithType.vb: PenController.SetPassword(String, String)
  fullName.vb: Neosmartpen.Net.PenController.SetPassword(String, String)
  name.vb: SetPassword(String, String)
- uid: Neosmartpen.Net.PenController.InputPassword(System.String)
  commentId: M:Neosmartpen.Net.PenController.InputPassword(System.String)
  id: InputPassword(System.String)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: InputPassword(string)
  nameWithType: PenController.InputPassword(string)
  fullName: Neosmartpen.Net.PenController.InputPassword(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: InputPassword
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 600
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: If you request a password when the pen is locked, enter it
  example: []
  syntax:
    content: public void InputPassword(string password)
    parameters:
    - id: password
      type: System.String
      description: Specifies the password for authentication. password is a string, maximum length is 16 bytes
    content.vb: Public Sub InputPassword(password As String)
  overload: Neosmartpen.Net.PenController.InputPassword*
  nameWithType.vb: PenController.InputPassword(String)
  fullName.vb: Neosmartpen.Net.PenController.InputPassword(String)
  name.vb: InputPassword(String)
- uid: Neosmartpen.Net.PenController.RequestPenStatus
  commentId: M:Neosmartpen.Net.PenController.RequestPenStatus
  id: RequestPenStatus
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestPenStatus()
  nameWithType: PenController.RequestPenStatus()
  fullName: Neosmartpen.Net.PenController.RequestPenStatus()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestPenStatus
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 608
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request the status of the pen
  example: []
  syntax:
    content: public void RequestPenStatus()
    content.vb: Public Sub RequestPenStatus()
  overload: Neosmartpen.Net.PenController.RequestPenStatus*
- uid: Neosmartpen.Net.PenController.SetRtcTime(System.Int64)
  commentId: M:Neosmartpen.Net.PenController.SetRtcTime(System.Int64)
  id: SetRtcTime(System.Int64)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetRtcTime(long)
  nameWithType: PenController.SetRtcTime(long)
  fullName: Neosmartpen.Net.PenController.SetRtcTime(long)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetRtcTime
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 617
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the pen's RTC timestamp
  example: []
  syntax:
    content: public void SetRtcTime(long timetick)
    parameters:
    - id: timetick
      type: System.Int64
      description: milisecond timestamp tick (from 1970-01-01)
    content.vb: Public Sub SetRtcTime(timetick As Long)
  overload: Neosmartpen.Net.PenController.SetRtcTime*
  nameWithType.vb: PenController.SetRtcTime(Long)
  fullName.vb: Neosmartpen.Net.PenController.SetRtcTime(Long)
  name.vb: SetRtcTime(Long)
- uid: Neosmartpen.Net.PenController.SetAutoPowerOffTime(System.Int16)
  commentId: M:Neosmartpen.Net.PenController.SetAutoPowerOffTime(System.Int16)
  id: SetAutoPowerOffTime(System.Int16)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetAutoPowerOffTime(short)
  nameWithType: PenController.SetAutoPowerOffTime(short)
  fullName: Neosmartpen.Net.PenController.SetAutoPowerOffTime(short)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetAutoPowerOffTime
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 626
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the power-off setting when there is no input for a certain period of time
  example: []
  syntax:
    content: public void SetAutoPowerOffTime(short minute)
    parameters:
    - id: minute
      type: System.Int16
      description: minute of maximum idle time, staying power on (0~)
    content.vb: Public Sub SetAutoPowerOffTime(minute As Short)
  overload: Neosmartpen.Net.PenController.SetAutoPowerOffTime*
  nameWithType.vb: PenController.SetAutoPowerOffTime(Short)
  fullName.vb: Neosmartpen.Net.PenController.SetAutoPowerOffTime(Short)
  name.vb: SetAutoPowerOffTime(Short)
- uid: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable(System.Boolean)
  commentId: M:Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable(System.Boolean)
  id: SetPenCapPowerOnOffEnable(System.Boolean)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetPenCapPowerOnOffEnable(bool)
  nameWithType: PenController.SetPenCapPowerOnOffEnable(bool)
  fullName: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable(bool)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetPenCapPowerOnOffEnable
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 635
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the property that can be control by cap of pen
  example: []
  syntax:
    content: public void SetPenCapPowerOnOffEnable(bool enable)
    parameters:
    - id: enable
      type: System.Boolean
      description: true if you want enable setting; otherwise, false
    content.vb: Public Sub SetPenCapPowerOnOffEnable(enable As Boolean)
  overload: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable*
  nameWithType.vb: PenController.SetPenCapPowerOnOffEnable(Boolean)
  fullName.vb: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable(Boolean)
  name.vb: SetPenCapPowerOnOffEnable(Boolean)
- uid: Neosmartpen.Net.PenController.SetAutoPowerOnEnable(System.Boolean)
  commentId: M:Neosmartpen.Net.PenController.SetAutoPowerOnEnable(System.Boolean)
  id: SetAutoPowerOnEnable(System.Boolean)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetAutoPowerOnEnable(bool)
  nameWithType: PenController.SetAutoPowerOnEnable(bool)
  fullName: Neosmartpen.Net.PenController.SetAutoPowerOnEnable(bool)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetAutoPowerOnEnable
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 644
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the power-on setting when the pen tip is pressed
  example: []
  syntax:
    content: public void SetAutoPowerOnEnable(bool enable)
    parameters:
    - id: enable
      type: System.Boolean
      description: true if you want enable setting; otherwise, false
    content.vb: Public Sub SetAutoPowerOnEnable(enable As Boolean)
  overload: Neosmartpen.Net.PenController.SetAutoPowerOnEnable*
  nameWithType.vb: PenController.SetAutoPowerOnEnable(Boolean)
  fullName.vb: Neosmartpen.Net.PenController.SetAutoPowerOnEnable(Boolean)
  name.vb: SetAutoPowerOnEnable(Boolean)
- uid: Neosmartpen.Net.PenController.SetBeepSoundEnable(System.Boolean)
  commentId: M:Neosmartpen.Net.PenController.SetBeepSoundEnable(System.Boolean)
  id: SetBeepSoundEnable(System.Boolean)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetBeepSoundEnable(bool)
  nameWithType: PenController.SetBeepSoundEnable(bool)
  fullName: Neosmartpen.Net.PenController.SetBeepSoundEnable(bool)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetBeepSoundEnable
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 653
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the status of the beep sound property
  example: []
  syntax:
    content: public void SetBeepSoundEnable(bool enable)
    parameters:
    - id: enable
      type: System.Boolean
      description: true if you want enable setting; otherwise, false
    content.vb: Public Sub SetBeepSoundEnable(enable As Boolean)
  overload: Neosmartpen.Net.PenController.SetBeepSoundEnable*
  nameWithType.vb: PenController.SetBeepSoundEnable(Boolean)
  fullName.vb: Neosmartpen.Net.PenController.SetBeepSoundEnable(Boolean)
  name.vb: SetBeepSoundEnable(Boolean)
- uid: Neosmartpen.Net.PenController.SetOfflineDataEnable(System.Boolean)
  commentId: M:Neosmartpen.Net.PenController.SetOfflineDataEnable(System.Boolean)
  id: SetOfflineDataEnable(System.Boolean)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetOfflineDataEnable(bool)
  nameWithType: PenController.SetOfflineDataEnable(bool)
  fullName: Neosmartpen.Net.PenController.SetOfflineDataEnable(bool)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetOfflineDataEnable
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 667
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the usage of offline data
  example: []
  syntax:
    content: public void SetOfflineDataEnable(bool enable)
    parameters:
    - id: enable
      type: System.Boolean
      description: true if you want enable setting; otherwise, false
    content.vb: Public Sub SetOfflineDataEnable(enable As Boolean)
  overload: Neosmartpen.Net.PenController.SetOfflineDataEnable*
  nameWithType.vb: PenController.SetOfflineDataEnable(Boolean)
  fullName.vb: Neosmartpen.Net.PenController.SetOfflineDataEnable(Boolean)
  name.vb: SetOfflineDataEnable(Boolean)
- uid: Neosmartpen.Net.PenController.SetColor(System.Int32)
  commentId: M:Neosmartpen.Net.PenController.SetColor(System.Int32)
  id: SetColor(System.Int32)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetColor(int)
  nameWithType: PenController.SetColor(int)
  fullName: Neosmartpen.Net.PenController.SetColor(int)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetColor
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 676
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the color of LED
  example: []
  syntax:
    content: public void SetColor(int color)
    parameters:
    - id: color
      type: System.Int32
      description: integer type color formatted 0xAARRGGBB
    content.vb: Public Sub SetColor(color As Integer)
  overload: Neosmartpen.Net.PenController.SetColor*
  nameWithType.vb: PenController.SetColor(Integer)
  fullName.vb: Neosmartpen.Net.PenController.SetColor(Integer)
  name.vb: SetColor(Integer)
- uid: Neosmartpen.Net.PenController.SetSensitivity(System.Int16)
  commentId: M:Neosmartpen.Net.PenController.SetSensitivity(System.Int16)
  id: SetSensitivity(System.Int16)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetSensitivity(short)
  nameWithType: PenController.SetSensitivity(short)
  fullName: Neosmartpen.Net.PenController.SetSensitivity(short)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetSensitivity
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 685
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the value of the pen's sensitivity property that controls the force sensor of pen
  example: []
  syntax:
    content: public void SetSensitivity(short step)
    parameters:
    - id: step
      type: System.Int16
      description: the value of sensitivity. (0~4, 0 means maximum sensitivity)
    content.vb: Public Sub SetSensitivity([step] As Short)
  overload: Neosmartpen.Net.PenController.SetSensitivity*
  nameWithType.vb: PenController.SetSensitivity(Short)
  fullName.vb: Neosmartpen.Net.PenController.SetSensitivity(Short)
  name.vb: SetSensitivity(Short)
- uid: Neosmartpen.Net.PenController.SetUsbMode(Neosmartpen.Net.UsbMode)
  commentId: M:Neosmartpen.Net.PenController.SetUsbMode(Neosmartpen.Net.UsbMode)
  id: SetUsbMode(Neosmartpen.Net.UsbMode)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetUsbMode(UsbMode)
  nameWithType: PenController.SetUsbMode(UsbMode)
  fullName: Neosmartpen.Net.PenController.SetUsbMode(Neosmartpen.Net.UsbMode)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetUsbMode
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 695
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: >-
    Sets the status of usb mode property that determine if usb mode is disk or bulk.

    You can choose between Disk mode, which is used as a removable disk, and Bulk mode, which is capable of high volume data communication, when connected with usb
  example: []
  syntax:
    content: public void SetUsbMode(UsbMode mode)
    parameters:
    - id: mode
      type: Neosmartpen.Net.UsbMode
      description: enum of UsbMode
    content.vb: Public Sub SetUsbMode(mode As UsbMode)
  overload: Neosmartpen.Net.PenController.SetUsbMode*
- uid: Neosmartpen.Net.PenController.SetDownSampling(System.Boolean)
  commentId: M:Neosmartpen.Net.PenController.SetDownSampling(System.Boolean)
  id: SetDownSampling(System.Boolean)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetDownSampling(bool)
  nameWithType: PenController.SetDownSampling(bool)
  fullName: Neosmartpen.Net.PenController.SetDownSampling(bool)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetDownSampling
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 705
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: >-
    Sets the status of the down sampling property.

    Downsampling is a function of avoiding unnecessary data communication by omitting coordinates at the same position.
  example: []
  syntax:
    content: public void SetDownSampling(bool enable)
    parameters:
    - id: enable
      type: System.Boolean
      description: true if you want to enable down sampling, otherwise false.
    content.vb: Public Sub SetDownSampling(enable As Boolean)
  overload: Neosmartpen.Net.PenController.SetDownSampling*
  nameWithType.vb: PenController.SetDownSampling(Boolean)
  fullName.vb: Neosmartpen.Net.PenController.SetDownSampling(Boolean)
  name.vb: SetDownSampling(Boolean)
- uid: Neosmartpen.Net.PenController.SetBtLocalName(System.String)
  commentId: M:Neosmartpen.Net.PenController.SetBtLocalName(System.String)
  id: SetBtLocalName(System.String)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetBtLocalName(string)
  nameWithType: PenController.SetBtLocalName(string)
  fullName: Neosmartpen.Net.PenController.SetBtLocalName(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetBtLocalName
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 714
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the local name of the bluetooth device property.
  example: []
  syntax:
    content: public void SetBtLocalName(string btLocalName)
    parameters:
    - id: btLocalName
      type: System.String
      description: Bluetooth local name to set
    content.vb: Public Sub SetBtLocalName(btLocalName As String)
  overload: Neosmartpen.Net.PenController.SetBtLocalName*
  nameWithType.vb: PenController.SetBtLocalName(String)
  fullName.vb: Neosmartpen.Net.PenController.SetBtLocalName(String)
  name.vb: SetBtLocalName(String)
- uid: Neosmartpen.Net.PenController.SetFscSensitivity(System.Int16)
  commentId: M:Neosmartpen.Net.PenController.SetFscSensitivity(System.Int16)
  id: SetFscSensitivity(System.Int16)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetFscSensitivity(short)
  nameWithType: PenController.SetFscSensitivity(short)
  fullName: Neosmartpen.Net.PenController.SetFscSensitivity(short)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetFscSensitivity
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 723
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the value of the pen's sensitivity property that controls the force sensor(c-type) of pen.
  example: []
  syntax:
    content: public void SetFscSensitivity(short step)
    parameters:
    - id: step
      type: System.Int16
      description: the value of sensitivity. (0~4, 0 means maximum sensitivity)
    content.vb: Public Sub SetFscSensitivity([step] As Short)
  overload: Neosmartpen.Net.PenController.SetFscSensitivity*
  nameWithType.vb: PenController.SetFscSensitivity(Short)
  fullName.vb: Neosmartpen.Net.PenController.SetFscSensitivity(Short)
  name.vb: SetFscSensitivity(Short)
- uid: Neosmartpen.Net.PenController.SetDataTransmissionType(Neosmartpen.Net.DataTransmissionType)
  commentId: M:Neosmartpen.Net.PenController.SetDataTransmissionType(Neosmartpen.Net.DataTransmissionType)
  id: SetDataTransmissionType(Neosmartpen.Net.DataTransmissionType)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetDataTransmissionType(DataTransmissionType)
  nameWithType: PenController.SetDataTransmissionType(DataTransmissionType)
  fullName: Neosmartpen.Net.PenController.SetDataTransmissionType(Neosmartpen.Net.DataTransmissionType)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetDataTransmissionType
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 732
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the status of data transmission type property that determine if data transmission type is event or request-response.
  example: []
  syntax:
    content: public void SetDataTransmissionType(DataTransmissionType mode)
    parameters:
    - id: mode
      type: Neosmartpen.Net.DataTransmissionType
      description: enum of DataTransmissionType
    content.vb: Public Sub SetDataTransmissionType(mode As DataTransmissionType)
  overload: Neosmartpen.Net.PenController.SetDataTransmissionType*
- uid: Neosmartpen.Net.PenController.RequestBeepAndLight
  commentId: M:Neosmartpen.Net.PenController.RequestBeepAndLight
  id: RequestBeepAndLight
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestBeepAndLight()
  nameWithType: PenController.RequestBeepAndLight()
  fullName: Neosmartpen.Net.PenController.RequestBeepAndLight()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestBeepAndLight
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 740
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request Beeps and light on.
  example: []
  syntax:
    content: public void RequestBeepAndLight()
    content.vb: Public Sub RequestBeepAndLight()
  overload: Neosmartpen.Net.PenController.RequestBeepAndLight*
- uid: Neosmartpen.Net.PenController.AddAvailableNote
  commentId: M:Neosmartpen.Net.PenController.AddAvailableNote
  id: AddAvailableNote
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AddAvailableNote()
  nameWithType: PenController.AddAvailableNote()
  fullName: Neosmartpen.Net.PenController.AddAvailableNote()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AddAvailableNote
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 748
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the available notebook type
  example: []
  syntax:
    content: public void AddAvailableNote()
    content.vb: Public Sub AddAvailableNote()
  overload: Neosmartpen.Net.PenController.AddAvailableNote*
- uid: Neosmartpen.Net.PenController.AddAvailableNote(System.Int32,System.Int32,System.Int32[])
  commentId: M:Neosmartpen.Net.PenController.AddAvailableNote(System.Int32,System.Int32,System.Int32[])
  id: AddAvailableNote(System.Int32,System.Int32,System.Int32[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AddAvailableNote(int, int, int[])
  nameWithType: PenController.AddAvailableNote(int, int, int[])
  fullName: Neosmartpen.Net.PenController.AddAvailableNote(int, int, int[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AddAvailableNote
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 759
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the available notebook type
  example: []
  syntax:
    content: public void AddAvailableNote(int section, int owner, int[] notes = null)
    parameters:
    - id: section
      type: System.Int32
      description: The section Id of the paper
    - id: owner
      type: System.Int32
      description: The owner Id of the paper
    - id: notes
      type: System.Int32[]
      description: The array of notebook Id list
    content.vb: Public Sub AddAvailableNote(section As Integer, owner As Integer, notes As Integer() = Nothing)
  overload: Neosmartpen.Net.PenController.AddAvailableNote*
  nameWithType.vb: PenController.AddAvailableNote(Integer, Integer, Integer())
  fullName.vb: Neosmartpen.Net.PenController.AddAvailableNote(Integer, Integer, Integer())
  name.vb: AddAvailableNote(Integer, Integer, Integer())
- uid: Neosmartpen.Net.PenController.AddAvailableNote(System.Int32[],System.Int32[])
  commentId: M:Neosmartpen.Net.PenController.AddAvailableNote(System.Int32[],System.Int32[])
  id: AddAvailableNote(System.Int32[],System.Int32[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: AddAvailableNote(int[], int[])
  nameWithType: PenController.AddAvailableNote(int[], int[])
  fullName: Neosmartpen.Net.PenController.AddAvailableNote(int[], int[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: AddAvailableNote
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 769
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Sets the available notebook types
  example: []
  syntax:
    content: public void AddAvailableNote(int[] section, int[] owner)
    parameters:
    - id: section
      type: System.Int32[]
      description: The array of section Id of the paper list
    - id: owner
      type: System.Int32[]
      description: The array of owner Id of the paper list
    content.vb: Public Sub AddAvailableNote(section As Integer(), owner As Integer())
  overload: Neosmartpen.Net.PenController.AddAvailableNote*
  nameWithType.vb: PenController.AddAvailableNote(Integer(), Integer())
  fullName.vb: Neosmartpen.Net.PenController.AddAvailableNote(Integer(), Integer())
  name.vb: AddAvailableNote(Integer(), Integer())
- uid: Neosmartpen.Net.PenController.RequestOfflineDataList
  commentId: M:Neosmartpen.Net.PenController.RequestOfflineDataList
  id: RequestOfflineDataList
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestOfflineDataList()
  nameWithType: PenController.RequestOfflineDataList()
  fullName: Neosmartpen.Net.PenController.RequestOfflineDataList()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestOfflineDataList
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 786
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Requests the list of Offline data
  example: []
  syntax:
    content: public void RequestOfflineDataList()
    content.vb: Public Sub RequestOfflineDataList()
  overload: Neosmartpen.Net.PenController.RequestOfflineDataList*
- uid: Neosmartpen.Net.PenController.RequestRemoveOfflineData(System.Int32,System.Int32,System.Int32[])
  commentId: M:Neosmartpen.Net.PenController.RequestRemoveOfflineData(System.Int32,System.Int32,System.Int32[])
  id: RequestRemoveOfflineData(System.Int32,System.Int32,System.Int32[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestRemoveOfflineData(int, int, int[])
  nameWithType: PenController.RequestRemoveOfflineData(int, int, int[])
  fullName: Neosmartpen.Net.PenController.RequestRemoveOfflineData(int, int, int[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestRemoveOfflineData
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 797
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to remove offline data in device.
  example: []
  syntax:
    content: public void RequestRemoveOfflineData(int section, int owner, int[] notes)
    parameters:
    - id: section
      type: System.Int32
      description: The Section Id of the paper
    - id: owner
      type: System.Int32
      description: The Owner Id of the paper
    - id: notes
      type: System.Int32[]
      description: The Note Id's array of the paper
    content.vb: Public Sub RequestRemoveOfflineData(section As Integer, owner As Integer, notes As Integer())
  overload: Neosmartpen.Net.PenController.RequestRemoveOfflineData*
  nameWithType.vb: PenController.RequestRemoveOfflineData(Integer, Integer, Integer())
  fullName.vb: Neosmartpen.Net.PenController.RequestRemoveOfflineData(Integer, Integer, Integer())
  name.vb: RequestRemoveOfflineData(Integer, Integer, Integer())
- uid: Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32[])
  commentId: M:Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32[])
  id: RequestOfflineData(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestOfflineData(int, int, int, bool, int[])
  nameWithType: PenController.RequestOfflineData(int, int, int, bool, int[])
  fullName: Neosmartpen.Net.PenController.RequestOfflineData(int, int, int, bool, int[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestOfflineData
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 810
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Requests the transmission of offline data
  example: []
  syntax:
    content: public bool RequestOfflineData(int section, int owner, int note, bool deleteOnFinished = true, int[] pages = null)
    parameters:
    - id: section
      type: System.Int32
      description: The section Id of the paper
    - id: owner
      type: System.Int32
      description: The owner Id of the paper
    - id: note
      type: System.Int32
    - id: deleteOnFinished
      type: System.Boolean
      description: delete offline data when transmission is finished
    - id: pages
      type: System.Int32[]
      description: The array of page's number
    return:
      type: System.Boolean
    content.vb: Public Function RequestOfflineData(section As Integer, owner As Integer, note As Integer, deleteOnFinished As Boolean = True, pages As Integer() = Nothing) As Boolean
  overload: Neosmartpen.Net.PenController.RequestOfflineData*
  nameWithType.vb: PenController.RequestOfflineData(Integer, Integer, Integer, Boolean, Integer())
  fullName.vb: Neosmartpen.Net.PenController.RequestOfflineData(Integer, Integer, Integer, Boolean, Integer())
  name.vb: RequestOfflineData(Integer, Integer, Integer, Boolean, Integer())
- uid: Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32[])
  commentId: M:Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32,System.Int32[])
  id: RequestOfflineData(System.Int32,System.Int32,System.Int32[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestOfflineData(int, int, int[])
  nameWithType: PenController.RequestOfflineData(int, int, int[])
  fullName: Neosmartpen.Net.PenController.RequestOfflineData(int, int, int[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestOfflineData
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 821
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Requests the transmission of offline data
  example: []
  syntax:
    content: public bool RequestOfflineData(int section, int owner, int[] notes)
    parameters:
    - id: section
      type: System.Int32
      description: The section Id of the paper
    - id: owner
      type: System.Int32
      description: The owner Id of the paper
    - id: notes
      type: System.Int32[]
      description: The array of notebook Id list
    return:
      type: System.Boolean
    content.vb: Public Function RequestOfflineData(section As Integer, owner As Integer, notes As Integer()) As Boolean
  overload: Neosmartpen.Net.PenController.RequestOfflineData*
  nameWithType.vb: PenController.RequestOfflineData(Integer, Integer, Integer())
  fullName.vb: Neosmartpen.Net.PenController.RequestOfflineData(Integer, Integer, Integer())
  name.vb: RequestOfflineData(Integer, Integer, Integer())
- uid: Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32)
  commentId: M:Neosmartpen.Net.PenController.RequestOfflineData(System.Int32,System.Int32)
  id: RequestOfflineData(System.Int32,System.Int32)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestOfflineData(int, int)
  nameWithType: PenController.RequestOfflineData(int, int)
  fullName: Neosmartpen.Net.PenController.RequestOfflineData(int, int)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestOfflineData
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 831
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Requests the transmission of offline data
  example: []
  syntax:
    content: public void RequestOfflineData(int section, int owner)
    parameters:
    - id: section
      type: System.Int32
      description: The section Id of the paper
    - id: owner
      type: System.Int32
      description: The owner Id of the paper
    content.vb: Public Sub RequestOfflineData(section As Integer, owner As Integer)
  overload: Neosmartpen.Net.PenController.RequestOfflineData*
  nameWithType.vb: PenController.RequestOfflineData(Integer, Integer)
  fullName.vb: Neosmartpen.Net.PenController.RequestOfflineData(Integer, Integer)
  name.vb: RequestOfflineData(Integer, Integer)
- uid: Neosmartpen.Net.PenController.RequestFirmwareInstallation(System.String,System.String)
  commentId: M:Neosmartpen.Net.PenController.RequestFirmwareInstallation(System.String,System.String)
  id: RequestFirmwareInstallation(System.String,System.String)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: RequestFirmwareInstallation(string, string)
  nameWithType: PenController.RequestFirmwareInstallation(string, string)
  fullName: Neosmartpen.Net.PenController.RequestFirmwareInstallation(string, string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: RequestFirmwareInstallation
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 841
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Requests the firmware installation
  example: []
  syntax:
    content: public void RequestFirmwareInstallation(string file, string version)
    parameters:
    - id: file
      type: System.String
      description: Represents a binary file of firmware
    - id: version
      type: System.String
      description: Version of firmware typed string
    content.vb: Public Sub RequestFirmwareInstallation(file As String, version As String)
  overload: Neosmartpen.Net.PenController.RequestFirmwareInstallation*
  nameWithType.vb: PenController.RequestFirmwareInstallation(String, String)
  fullName.vb: Neosmartpen.Net.PenController.RequestFirmwareInstallation(String, String)
  name.vb: RequestFirmwareInstallation(String, String)
- uid: Neosmartpen.Net.PenController.SuspendFirmwareInstallation
  commentId: M:Neosmartpen.Net.PenController.SuspendFirmwareInstallation
  id: SuspendFirmwareInstallation
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SuspendFirmwareInstallation()
  nameWithType: PenController.SuspendFirmwareInstallation()
  fullName: Neosmartpen.Net.PenController.SuspendFirmwareInstallation()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SuspendFirmwareInstallation
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 849
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to suspend firmware installation
  example: []
  syntax:
    content: public void SuspendFirmwareInstallation()
    content.vb: Public Sub SuspendFirmwareInstallation()
  overload: Neosmartpen.Net.PenController.SuspendFirmwareInstallation*
- uid: Neosmartpen.Net.PenController.IsSupportPenProfile
  commentId: M:Neosmartpen.Net.PenController.IsSupportPenProfile
  id: IsSupportPenProfile
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: IsSupportPenProfile()
  nameWithType: PenController.IsSupportPenProfile()
  fullName: Neosmartpen.Net.PenController.IsSupportPenProfile()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: IsSupportPenProfile
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 854
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  syntax:
    content: public bool IsSupportPenProfile()
    return:
      type: System.Boolean
    content.vb: Public Function IsSupportPenProfile() As Boolean
  overload: Neosmartpen.Net.PenController.IsSupportPenProfile*
- uid: Neosmartpen.Net.PenController.CreateProfile(System.String,System.Byte[])
  commentId: M:Neosmartpen.Net.PenController.CreateProfile(System.String,System.Byte[])
  id: CreateProfile(System.String,System.Byte[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: CreateProfile(string, byte[])
  nameWithType: PenController.CreateProfile(string, byte[])
  fullName: Neosmartpen.Net.PenController.CreateProfile(string, byte[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: CreateProfile
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 877
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to create profile
  example: []
  syntax:
    content: public void CreateProfile(string profileName, byte[] password)
    parameters:
    - id: profileName
      type: System.String
      description: Name of the profile to be created
    - id: password
      type: System.Byte[]
      description: Password of profile
    content.vb: Public Sub CreateProfile(profileName As String, password As Byte())
  overload: Neosmartpen.Net.PenController.CreateProfile*
  nameWithType.vb: PenController.CreateProfile(String, Byte())
  fullName.vb: Neosmartpen.Net.PenController.CreateProfile(String, Byte())
  name.vb: CreateProfile(String, Byte())
- uid: Neosmartpen.Net.PenController.DeleteProfile(System.String,System.Byte[])
  commentId: M:Neosmartpen.Net.PenController.DeleteProfile(System.String,System.Byte[])
  id: DeleteProfile(System.String,System.Byte[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: DeleteProfile(string, byte[])
  nameWithType: PenController.DeleteProfile(string, byte[])
  fullName: Neosmartpen.Net.PenController.DeleteProfile(string, byte[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: DeleteProfile
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 905
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to delete profile
  example: []
  syntax:
    content: public void DeleteProfile(string profileName, byte[] password)
    parameters:
    - id: profileName
      type: System.String
      description: Name of the profile to be deleted
    - id: password
      type: System.Byte[]
      description: password of profile
    content.vb: Public Sub DeleteProfile(profileName As String, password As Byte())
  overload: Neosmartpen.Net.PenController.DeleteProfile*
  nameWithType.vb: PenController.DeleteProfile(String, Byte())
  fullName.vb: Neosmartpen.Net.PenController.DeleteProfile(String, Byte())
  name.vb: DeleteProfile(String, Byte())
- uid: Neosmartpen.Net.PenController.GetProfileInfo(System.String)
  commentId: M:Neosmartpen.Net.PenController.GetProfileInfo(System.String)
  id: GetProfileInfo(System.String)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: GetProfileInfo(string)
  nameWithType: PenController.GetProfileInfo(string)
  fullName: Neosmartpen.Net.PenController.GetProfileInfo(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GetProfileInfo
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 931
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request information of the profile
  example: []
  syntax:
    content: public void GetProfileInfo(string profileName)
    parameters:
    - id: profileName
      type: System.String
      description: profile's name
    content.vb: Public Sub GetProfileInfo(profileName As String)
  overload: Neosmartpen.Net.PenController.GetProfileInfo*
  nameWithType.vb: PenController.GetProfileInfo(String)
  fullName.vb: Neosmartpen.Net.PenController.GetProfileInfo(String)
  name.vb: GetProfileInfo(String)
- uid: Neosmartpen.Net.PenController.ReadProfileValues(System.String,System.String[])
  commentId: M:Neosmartpen.Net.PenController.ReadProfileValues(System.String,System.String[])
  id: ReadProfileValues(System.String,System.String[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: ReadProfileValues(string, string[])
  nameWithType: PenController.ReadProfileValues(string, string[])
  fullName: Neosmartpen.Net.PenController.ReadProfileValues(string, string[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: ReadProfileValues
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 953
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to get data from profile
  example: []
  syntax:
    content: public void ReadProfileValues(string profileName, string[] keys)
    parameters:
    - id: profileName
      type: System.String
      description: profile name
    - id: keys
      type: System.String[]
      description: key array
    content.vb: Public Sub ReadProfileValues(profileName As String, keys As String())
  overload: Neosmartpen.Net.PenController.ReadProfileValues*
  nameWithType.vb: PenController.ReadProfileValues(String, String())
  fullName.vb: Neosmartpen.Net.PenController.ReadProfileValues(String, String())
  name.vb: ReadProfileValues(String, String())
- uid: Neosmartpen.Net.PenController.WriteProfileValues(System.String,System.Byte[],System.String[],System.Byte[][])
  commentId: M:Neosmartpen.Net.PenController.WriteProfileValues(System.String,System.Byte[],System.String[],System.Byte[][])
  id: WriteProfileValues(System.String,System.Byte[],System.String[],System.Byte[][])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: WriteProfileValues(string, byte[], string[], byte[][])
  nameWithType: PenController.WriteProfileValues(string, byte[], string[], byte[][])
  fullName: Neosmartpen.Net.PenController.WriteProfileValues(string, byte[], string[], byte[][])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: WriteProfileValues
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 987
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to write data
  example: []
  syntax:
    content: public void WriteProfileValues(string profileName, byte[] password, string[] keys, byte[][] data)
    parameters:
    - id: profileName
      type: System.String
      description: profile name
    - id: password
      type: System.Byte[]
      description: password
    - id: keys
      type: System.String[]
      description: key array
    - id: data
      type: System.Byte[][]
      description: data
    content.vb: Public Sub WriteProfileValues(profileName As String, password As Byte(), keys As String(), data As Byte()())
  overload: Neosmartpen.Net.PenController.WriteProfileValues*
  nameWithType.vb: PenController.WriteProfileValues(String, Byte(), String(), Byte()())
  fullName.vb: Neosmartpen.Net.PenController.WriteProfileValues(String, Byte(), String(), Byte()())
  name.vb: WriteProfileValues(String, Byte(), String(), Byte()())
- uid: Neosmartpen.Net.PenController.DeleteProfileValues(System.String,System.Byte[],System.String[])
  commentId: M:Neosmartpen.Net.PenController.DeleteProfileValues(System.String,System.Byte[],System.String[])
  id: DeleteProfileValues(System.String,System.Byte[],System.String[])
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: DeleteProfileValues(string, byte[], string[])
  nameWithType: PenController.DeleteProfileValues(string, byte[], string[])
  fullName: Neosmartpen.Net.PenController.DeleteProfileValues(string, byte[], string[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: DeleteProfileValues
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 1029
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Request to delete data
  example: []
  syntax:
    content: public void DeleteProfileValues(string profileName, byte[] password, string[] keys)
    parameters:
    - id: profileName
      type: System.String
      description: profile name
    - id: password
      type: System.Byte[]
      description: password
    - id: keys
      type: System.String[]
      description: key array
    content.vb: Public Sub DeleteProfileValues(profileName As String, password As Byte(), keys As String())
  overload: Neosmartpen.Net.PenController.DeleteProfileValues*
  nameWithType.vb: PenController.DeleteProfileValues(String, Byte(), String())
  fullName.vb: Neosmartpen.Net.PenController.DeleteProfileValues(String, Byte(), String())
  name.vb: DeleteProfileValues(String, Byte(), String())
- uid: Neosmartpen.Net.PenController.OnConnected
  commentId: M:Neosmartpen.Net.PenController.OnConnected
  id: OnConnected
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OnConnected()
  nameWithType: PenController.OnConnected()
  fullName: Neosmartpen.Net.PenController.OnConnected()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OnConnected
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 1061
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Fired when a connection is made, override to handle in your own code.
  example: []
  syntax:
    content: public void OnConnected()
    content.vb: Public Sub OnConnected()
  overload: Neosmartpen.Net.PenController.OnConnected*
- uid: Neosmartpen.Net.PenController.OnDisconnected
  commentId: M:Neosmartpen.Net.PenController.OnDisconnected
  id: OnDisconnected
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: OnDisconnected()
  nameWithType: PenController.OnDisconnected()
  fullName: Neosmartpen.Net.PenController.OnDisconnected()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: OnDisconnected
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 1069
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  summary: Fired when a connection is destroyed, override to handle in your own code.
  example: []
  syntax:
    content: public void OnDisconnected()
    content.vb: Public Sub OnDisconnected()
  overload: Neosmartpen.Net.PenController.OnDisconnected*
- uid: Neosmartpen.Net.PenController.SetPressureCalibrateFactor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Neosmartpen.Net.PenController.SetPressureCalibrateFactor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetPressureCalibrateFactor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: SetPressureCalibrateFactor(int, int, int, int, int, int)
  nameWithType: PenController.SetPressureCalibrateFactor(int, int, int, int, int, int)
  fullName: Neosmartpen.Net.PenController.SetPressureCalibrateFactor(int, int, int, int, int, int)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: SetPressureCalibrateFactor
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 1127
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  syntax:
    content: public void SetPressureCalibrateFactor(int cPX1, int cPY1, int cPX2, int cPY2, int cPX3, int cPY3)
    parameters:
    - id: cPX1
      type: System.Int32
    - id: cPY1
      type: System.Int32
    - id: cPX2
      type: System.Int32
    - id: cPY2
      type: System.Int32
    - id: cPX3
      type: System.Int32
    - id: cPY3
      type: System.Int32
    content.vb: Public Sub SetPressureCalibrateFactor(cPX1 As Integer, cPY1 As Integer, cPX2 As Integer, cPY2 As Integer, cPX3 As Integer, cPY3 As Integer)
  overload: Neosmartpen.Net.PenController.SetPressureCalibrateFactor*
  nameWithType.vb: PenController.SetPressureCalibrateFactor(Integer, Integer, Integer, Integer, Integer, Integer)
  fullName.vb: Neosmartpen.Net.PenController.SetPressureCalibrateFactor(Integer, Integer, Integer, Integer, Integer, Integer)
  name.vb: SetPressureCalibrateFactor(Integer, Integer, Integer, Integer, Integer, Integer)
- uid: Neosmartpen.Net.PenController.GetPressureCalibrationFactor(System.Int32)
  commentId: M:Neosmartpen.Net.PenController.GetPressureCalibrationFactor(System.Int32)
  id: GetPressureCalibrationFactor(System.Int32)
  parent: Neosmartpen.Net.PenController
  langs:
  - csharp
  - vb
  name: GetPressureCalibrationFactor(int)
  nameWithType: PenController.GetPressureCalibrationFactor(int)
  fullName: Neosmartpen.Net.PenController.GetPressureCalibrationFactor(int)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GetPressureCalibrationFactor
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Client/PenController.cs
    startLine: 1132
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net
  syntax:
    content: public float GetPressureCalibrationFactor(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Single
    content.vb: Public Function GetPressureCalibrationFactor(index As Integer) As Single
  overload: Neosmartpen.Net.PenController.GetPressureCalibrationFactor*
  nameWithType.vb: PenController.GetPressureCalibrationFactor(Integer)
  fullName.vb: Neosmartpen.Net.PenController.GetPressureCalibrationFactor(Integer)
  name.vb: GetPressureCalibrationFactor(Integer)
references:
- uid: Neosmartpen.Net
  commentId: N:Neosmartpen.Net
  href: Neosmartpen.html
  name: Neosmartpen.Net
  nameWithType: Neosmartpen.Net
  fullName: Neosmartpen.Net
  spec.csharp:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
  spec.vb:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Neosmartpen.Net.PenController.Protocol*
  commentId: Overload:Neosmartpen.Net.PenController.Protocol
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_Protocol
  name: Protocol
  nameWithType: PenController.Protocol
  fullName: Neosmartpen.Net.PenController.Protocol
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Neosmartpen.Net.PenController.#ctor*
  commentId: Overload:Neosmartpen.Net.PenController.#ctor
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController__ctor
  name: PenController
  nameWithType: PenController.PenController
  fullName: Neosmartpen.Net.PenController.PenController
  nameWithType.vb: PenController.New
  fullName.vb: Neosmartpen.Net.PenController.New
  name.vb: New
- uid: Neosmartpen.Net.PenController.PenClient*
  commentId: Overload:Neosmartpen.Net.PenController.PenClient
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_PenClient
  name: PenClient
  nameWithType: PenController.PenClient
  fullName: Neosmartpen.Net.PenController.PenClient
- uid: Neosmartpen.Net.IPenClient
  commentId: T:Neosmartpen.Net.IPenClient
  parent: Neosmartpen.Net
  href: Neosmartpen.Net.IPenClient.html
  name: IPenClient
  nameWithType: IPenClient
  fullName: Neosmartpen.Net.IPenClient
- uid: Neosmartpen.Net.PenController.OnDataReceived*
  commentId: Overload:Neosmartpen.Net.PenController.OnDataReceived
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_OnDataReceived_System_Byte___
  name: OnDataReceived
  nameWithType: PenController.OnDataReceived
  fullName: Neosmartpen.Net.PenController.OnDataReceived
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ConnectedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ConnectedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, ConnectedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, ConnectedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.ConnectedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, ConnectedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.ConnectedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, ConnectedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ConnectedEventArgs
    name: ConnectedEventArgs
    href: Neosmartpen.Net.ConnectedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ConnectedEventArgs
    name: ConnectedEventArgs
    href: Neosmartpen.Net.ConnectedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler`2
  commentId: T:Windows.Foundation.TypedEventHandler`2
  isExternal: true
  name: TypedEventHandler<TSender, TResult>
  nameWithType: TypedEventHandler<TSender, TResult>
  fullName: Windows.Foundation.TypedEventHandler<TSender, TResult>
  nameWithType.vb: TypedEventHandler(Of TSender, TResult)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of TSender, TResult)
  name.vb: TypedEventHandler(Of TSender, TResult)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - name: TSender
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSender
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  isExternal: true
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
  spec.csharp:
  - uid: Windows
    name: Windows
    isExternal: true
  - name: .
  - uid: Windows.Foundation
    name: Foundation
    isExternal: true
  spec.vb:
  - uid: Windows
    name: Windows
    isExternal: true
  - name: .
  - uid: Windows.Foundation
    name: Foundation
    isExternal: true
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,System.Object}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, object>
  nameWithType: TypedEventHandler<IPenClient, object>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, object>
  nameWithType.vb: TypedEventHandler(Of IPenClient, Object)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Object)
  name.vb: TypedEventHandler(Of IPenClient, Object)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.SimpleResultEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, SimpleResultEventArgs>
  nameWithType: TypedEventHandler<IPenClient, SimpleResultEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.SimpleResultEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.SimpleResultEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, SimpleResultEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.SimpleResultEventArgs
    name: SimpleResultEventArgs
    href: Neosmartpen.Net.SimpleResultEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.SimpleResultEventArgs
    name: SimpleResultEventArgs
    href: Neosmartpen.Net.SimpleResultEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PasswordRequestedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PasswordRequestedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, PasswordRequestedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, PasswordRequestedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.PasswordRequestedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, PasswordRequestedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.PasswordRequestedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, PasswordRequestedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PasswordRequestedEventArgs
    name: PasswordRequestedEventArgs
    href: Neosmartpen.Net.PasswordRequestedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PasswordRequestedEventArgs
    name: PasswordRequestedEventArgs
    href: Neosmartpen.Net.PasswordRequestedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.BatteryAlarmReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.BatteryAlarmReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, BatteryAlarmReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, BatteryAlarmReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.BatteryAlarmReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, BatteryAlarmReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.BatteryAlarmReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, BatteryAlarmReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.BatteryAlarmReceivedEventArgs
    name: BatteryAlarmReceivedEventArgs
    href: Neosmartpen.Net.BatteryAlarmReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.BatteryAlarmReceivedEventArgs
    name: BatteryAlarmReceivedEventArgs
    href: Neosmartpen.Net.BatteryAlarmReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.DotReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.DotReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, DotReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, DotReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.DotReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, DotReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.DotReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, DotReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.DotReceivedEventArgs
    name: DotReceivedEventArgs
    href: Neosmartpen.Net.DotReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.DotReceivedEventArgs
    name: DotReceivedEventArgs
    href: Neosmartpen.Net.DotReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ProgressChangeEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ProgressChangeEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, ProgressChangeEventArgs>
  nameWithType: TypedEventHandler<IPenClient, ProgressChangeEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.ProgressChangeEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, ProgressChangeEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.ProgressChangeEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, ProgressChangeEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ProgressChangeEventArgs
    name: ProgressChangeEventArgs
    href: Neosmartpen.Net.ProgressChangeEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ProgressChangeEventArgs
    name: ProgressChangeEventArgs
    href: Neosmartpen.Net.ProgressChangeEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineDataListReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineDataListReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, OfflineDataListReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, OfflineDataListReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.OfflineDataListReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, OfflineDataListReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.OfflineDataListReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, OfflineDataListReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.OfflineDataListReceivedEventArgs
    name: OfflineDataListReceivedEventArgs
    href: Neosmartpen.Net.OfflineDataListReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.OfflineDataListReceivedEventArgs
    name: OfflineDataListReceivedEventArgs
    href: Neosmartpen.Net.OfflineDataListReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineStrokeReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.OfflineStrokeReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, OfflineStrokeReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, OfflineStrokeReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.OfflineStrokeReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, OfflineStrokeReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.OfflineStrokeReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, OfflineStrokeReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.OfflineStrokeReceivedEventArgs
    name: OfflineStrokeReceivedEventArgs
    href: Neosmartpen.Net.OfflineStrokeReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.OfflineStrokeReceivedEventArgs
    name: OfflineStrokeReceivedEventArgs
    href: Neosmartpen.Net.OfflineStrokeReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenStatusReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenStatusReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, PenStatusReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, PenStatusReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.PenStatusReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, PenStatusReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.PenStatusReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, PenStatusReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PenStatusReceivedEventArgs
    name: PenStatusReceivedEventArgs
    href: Neosmartpen.Net.PenStatusReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PenStatusReceivedEventArgs
    name: PenStatusReceivedEventArgs
    href: Neosmartpen.Net.PenStatusReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenProfileReceivedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.PenProfileReceivedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, PenProfileReceivedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, PenProfileReceivedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.PenProfileReceivedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, PenProfileReceivedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.PenProfileReceivedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, PenProfileReceivedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PenProfileReceivedEventArgs
    name: PenProfileReceivedEventArgs
    href: Neosmartpen.Net.PenProfileReceivedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.PenProfileReceivedEventArgs
    name: PenProfileReceivedEventArgs
    href: Neosmartpen.Net.PenProfileReceivedEventArgs.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ErrorDetectedEventArgs}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.ErrorDetectedEventArgs}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, ErrorDetectedEventArgs>
  nameWithType: TypedEventHandler<IPenClient, ErrorDetectedEventArgs>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.ErrorDetectedEventArgs>
  nameWithType.vb: TypedEventHandler(Of IPenClient, ErrorDetectedEventArgs)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.ErrorDetectedEventArgs)
  name.vb: TypedEventHandler(Of IPenClient, ErrorDetectedEventArgs)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ErrorDetectedEventArgs
    name: ErrorDetectedEventArgs
    href: Neosmartpen.Net.ErrorDetectedEventArgs.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.ErrorDetectedEventArgs
    name: ErrorDetectedEventArgs
    href: Neosmartpen.Net.ErrorDetectedEventArgs.html
  - name: )
- uid: Neosmartpen.Net.PenController.SetPassword*
  commentId: Overload:Neosmartpen.Net.PenController.SetPassword
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetPassword_System_String_System_String_
  name: SetPassword
  nameWithType: PenController.SetPassword
  fullName: Neosmartpen.Net.PenController.SetPassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Neosmartpen.Net.PenController.InputPassword*
  commentId: Overload:Neosmartpen.Net.PenController.InputPassword
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_InputPassword_System_String_
  name: InputPassword
  nameWithType: PenController.InputPassword
  fullName: Neosmartpen.Net.PenController.InputPassword
- uid: Neosmartpen.Net.PenController.RequestPenStatus*
  commentId: Overload:Neosmartpen.Net.PenController.RequestPenStatus
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestPenStatus
  name: RequestPenStatus
  nameWithType: PenController.RequestPenStatus
  fullName: Neosmartpen.Net.PenController.RequestPenStatus
- uid: Neosmartpen.Net.PenController.SetRtcTime*
  commentId: Overload:Neosmartpen.Net.PenController.SetRtcTime
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetRtcTime_System_Int64_
  name: SetRtcTime
  nameWithType: PenController.SetRtcTime
  fullName: Neosmartpen.Net.PenController.SetRtcTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Neosmartpen.Net.PenController.SetAutoPowerOffTime*
  commentId: Overload:Neosmartpen.Net.PenController.SetAutoPowerOffTime
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetAutoPowerOffTime_System_Int16_
  name: SetAutoPowerOffTime
  nameWithType: PenController.SetAutoPowerOffTime
  fullName: Neosmartpen.Net.PenController.SetAutoPowerOffTime
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable*
  commentId: Overload:Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetPenCapPowerOnOffEnable_System_Boolean_
  name: SetPenCapPowerOnOffEnable
  nameWithType: PenController.SetPenCapPowerOnOffEnable
  fullName: Neosmartpen.Net.PenController.SetPenCapPowerOnOffEnable
- uid: Neosmartpen.Net.PenController.SetAutoPowerOnEnable*
  commentId: Overload:Neosmartpen.Net.PenController.SetAutoPowerOnEnable
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetAutoPowerOnEnable_System_Boolean_
  name: SetAutoPowerOnEnable
  nameWithType: PenController.SetAutoPowerOnEnable
  fullName: Neosmartpen.Net.PenController.SetAutoPowerOnEnable
- uid: Neosmartpen.Net.PenController.SetBeepSoundEnable*
  commentId: Overload:Neosmartpen.Net.PenController.SetBeepSoundEnable
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetBeepSoundEnable_System_Boolean_
  name: SetBeepSoundEnable
  nameWithType: PenController.SetBeepSoundEnable
  fullName: Neosmartpen.Net.PenController.SetBeepSoundEnable
- uid: Neosmartpen.Net.PenController.SetOfflineDataEnable*
  commentId: Overload:Neosmartpen.Net.PenController.SetOfflineDataEnable
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetOfflineDataEnable_System_Boolean_
  name: SetOfflineDataEnable
  nameWithType: PenController.SetOfflineDataEnable
  fullName: Neosmartpen.Net.PenController.SetOfflineDataEnable
- uid: Neosmartpen.Net.PenController.SetColor*
  commentId: Overload:Neosmartpen.Net.PenController.SetColor
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetColor_System_Int32_
  name: SetColor
  nameWithType: PenController.SetColor
  fullName: Neosmartpen.Net.PenController.SetColor
- uid: Neosmartpen.Net.PenController.SetSensitivity*
  commentId: Overload:Neosmartpen.Net.PenController.SetSensitivity
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetSensitivity_System_Int16_
  name: SetSensitivity
  nameWithType: PenController.SetSensitivity
  fullName: Neosmartpen.Net.PenController.SetSensitivity
- uid: Neosmartpen.Net.PenController.SetUsbMode*
  commentId: Overload:Neosmartpen.Net.PenController.SetUsbMode
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetUsbMode_Neosmartpen_Net_UsbMode_
  name: SetUsbMode
  nameWithType: PenController.SetUsbMode
  fullName: Neosmartpen.Net.PenController.SetUsbMode
- uid: Neosmartpen.Net.UsbMode
  commentId: T:Neosmartpen.Net.UsbMode
  parent: Neosmartpen.Net
  href: Neosmartpen.Net.UsbMode.html
  name: UsbMode
  nameWithType: UsbMode
  fullName: Neosmartpen.Net.UsbMode
- uid: Neosmartpen.Net.PenController.SetDownSampling*
  commentId: Overload:Neosmartpen.Net.PenController.SetDownSampling
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetDownSampling_System_Boolean_
  name: SetDownSampling
  nameWithType: PenController.SetDownSampling
  fullName: Neosmartpen.Net.PenController.SetDownSampling
- uid: Neosmartpen.Net.PenController.SetBtLocalName*
  commentId: Overload:Neosmartpen.Net.PenController.SetBtLocalName
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetBtLocalName_System_String_
  name: SetBtLocalName
  nameWithType: PenController.SetBtLocalName
  fullName: Neosmartpen.Net.PenController.SetBtLocalName
- uid: Neosmartpen.Net.PenController.SetFscSensitivity*
  commentId: Overload:Neosmartpen.Net.PenController.SetFscSensitivity
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetFscSensitivity_System_Int16_
  name: SetFscSensitivity
  nameWithType: PenController.SetFscSensitivity
  fullName: Neosmartpen.Net.PenController.SetFscSensitivity
- uid: Neosmartpen.Net.PenController.SetDataTransmissionType*
  commentId: Overload:Neosmartpen.Net.PenController.SetDataTransmissionType
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetDataTransmissionType_Neosmartpen_Net_DataTransmissionType_
  name: SetDataTransmissionType
  nameWithType: PenController.SetDataTransmissionType
  fullName: Neosmartpen.Net.PenController.SetDataTransmissionType
- uid: Neosmartpen.Net.DataTransmissionType
  commentId: T:Neosmartpen.Net.DataTransmissionType
  parent: Neosmartpen.Net
  href: Neosmartpen.Net.DataTransmissionType.html
  name: DataTransmissionType
  nameWithType: DataTransmissionType
  fullName: Neosmartpen.Net.DataTransmissionType
- uid: Neosmartpen.Net.PenController.RequestBeepAndLight*
  commentId: Overload:Neosmartpen.Net.PenController.RequestBeepAndLight
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestBeepAndLight
  name: RequestBeepAndLight
  nameWithType: PenController.RequestBeepAndLight
  fullName: Neosmartpen.Net.PenController.RequestBeepAndLight
- uid: Neosmartpen.Net.PenController.AddAvailableNote*
  commentId: Overload:Neosmartpen.Net.PenController.AddAvailableNote
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_AddAvailableNote
  name: AddAvailableNote
  nameWithType: PenController.AddAvailableNote
  fullName: Neosmartpen.Net.PenController.AddAvailableNote
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Neosmartpen.Net.PenController.RequestOfflineDataList*
  commentId: Overload:Neosmartpen.Net.PenController.RequestOfflineDataList
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestOfflineDataList
  name: RequestOfflineDataList
  nameWithType: PenController.RequestOfflineDataList
  fullName: Neosmartpen.Net.PenController.RequestOfflineDataList
- uid: Neosmartpen.Net.PenController.RequestRemoveOfflineData*
  commentId: Overload:Neosmartpen.Net.PenController.RequestRemoveOfflineData
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestRemoveOfflineData_System_Int32_System_Int32_System_Int32___
  name: RequestRemoveOfflineData
  nameWithType: PenController.RequestRemoveOfflineData
  fullName: Neosmartpen.Net.PenController.RequestRemoveOfflineData
- uid: Neosmartpen.Net.PenController.RequestOfflineData*
  commentId: Overload:Neosmartpen.Net.PenController.RequestOfflineData
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestOfflineData_System_Int32_System_Int32_System_Int32_System_Boolean_System_Int32___
  name: RequestOfflineData
  nameWithType: PenController.RequestOfflineData
  fullName: Neosmartpen.Net.PenController.RequestOfflineData
- uid: Neosmartpen.Net.PenController.RequestFirmwareInstallation*
  commentId: Overload:Neosmartpen.Net.PenController.RequestFirmwareInstallation
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_RequestFirmwareInstallation_System_String_System_String_
  name: RequestFirmwareInstallation
  nameWithType: PenController.RequestFirmwareInstallation
  fullName: Neosmartpen.Net.PenController.RequestFirmwareInstallation
- uid: Neosmartpen.Net.PenController.SuspendFirmwareInstallation*
  commentId: Overload:Neosmartpen.Net.PenController.SuspendFirmwareInstallation
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SuspendFirmwareInstallation
  name: SuspendFirmwareInstallation
  nameWithType: PenController.SuspendFirmwareInstallation
  fullName: Neosmartpen.Net.PenController.SuspendFirmwareInstallation
- uid: Neosmartpen.Net.PenController.IsSupportPenProfile*
  commentId: Overload:Neosmartpen.Net.PenController.IsSupportPenProfile
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_IsSupportPenProfile
  name: IsSupportPenProfile
  nameWithType: PenController.IsSupportPenProfile
  fullName: Neosmartpen.Net.PenController.IsSupportPenProfile
- uid: Neosmartpen.Net.PenController.CreateProfile*
  commentId: Overload:Neosmartpen.Net.PenController.CreateProfile
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_CreateProfile_System_String_System_Byte___
  name: CreateProfile
  nameWithType: PenController.CreateProfile
  fullName: Neosmartpen.Net.PenController.CreateProfile
- uid: Neosmartpen.Net.PenController.DeleteProfile*
  commentId: Overload:Neosmartpen.Net.PenController.DeleteProfile
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_DeleteProfile_System_String_System_Byte___
  name: DeleteProfile
  nameWithType: PenController.DeleteProfile
  fullName: Neosmartpen.Net.PenController.DeleteProfile
- uid: Neosmartpen.Net.PenController.GetProfileInfo*
  commentId: Overload:Neosmartpen.Net.PenController.GetProfileInfo
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_GetProfileInfo_System_String_
  name: GetProfileInfo
  nameWithType: PenController.GetProfileInfo
  fullName: Neosmartpen.Net.PenController.GetProfileInfo
- uid: Neosmartpen.Net.PenController.ReadProfileValues*
  commentId: Overload:Neosmartpen.Net.PenController.ReadProfileValues
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_ReadProfileValues_System_String_System_String___
  name: ReadProfileValues
  nameWithType: PenController.ReadProfileValues
  fullName: Neosmartpen.Net.PenController.ReadProfileValues
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Neosmartpen.Net.PenController.WriteProfileValues*
  commentId: Overload:Neosmartpen.Net.PenController.WriteProfileValues
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_WriteProfileValues_System_String_System_Byte___System_String___System_Byte_____
  name: WriteProfileValues
  nameWithType: PenController.WriteProfileValues
  fullName: Neosmartpen.Net.PenController.WriteProfileValues
- uid: System.Byte[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[][]
  nameWithType: byte[][]
  fullName: byte[][]
  nameWithType.vb: Byte()()
  fullName.vb: Byte()()
  name.vb: Byte()()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: (
  - name: )
- uid: Neosmartpen.Net.PenController.DeleteProfileValues*
  commentId: Overload:Neosmartpen.Net.PenController.DeleteProfileValues
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_DeleteProfileValues_System_String_System_Byte___System_String___
  name: DeleteProfileValues
  nameWithType: PenController.DeleteProfileValues
  fullName: Neosmartpen.Net.PenController.DeleteProfileValues
- uid: Neosmartpen.Net.PenController.OnConnected*
  commentId: Overload:Neosmartpen.Net.PenController.OnConnected
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_OnConnected
  name: OnConnected
  nameWithType: PenController.OnConnected
  fullName: Neosmartpen.Net.PenController.OnConnected
- uid: Neosmartpen.Net.PenController.OnDisconnected*
  commentId: Overload:Neosmartpen.Net.PenController.OnDisconnected
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_OnDisconnected
  name: OnDisconnected
  nameWithType: PenController.OnDisconnected
  fullName: Neosmartpen.Net.PenController.OnDisconnected
- uid: Neosmartpen.Net.PenController.SetPressureCalibrateFactor*
  commentId: Overload:Neosmartpen.Net.PenController.SetPressureCalibrateFactor
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_SetPressureCalibrateFactor_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32_
  name: SetPressureCalibrateFactor
  nameWithType: PenController.SetPressureCalibrateFactor
  fullName: Neosmartpen.Net.PenController.SetPressureCalibrateFactor
- uid: Neosmartpen.Net.PenController.GetPressureCalibrationFactor*
  commentId: Overload:Neosmartpen.Net.PenController.GetPressureCalibrationFactor
  href: Neosmartpen.Net.PenController.html#Neosmartpen_Net_PenController_GetPressureCalibrationFactor_System_Int32_
  name: GetPressureCalibrationFactor
  nameWithType: PenController.GetPressureCalibrationFactor
  fullName: Neosmartpen.Net.PenController.GetPressureCalibrationFactor
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
shouldSkipMarkup: true
