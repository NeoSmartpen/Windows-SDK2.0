### YamlMime:ManagedReference
items:
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  commentId: T:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  id: GenericBluetoothPenClient
  parent: Neosmartpen.Net.Bluetooth
  children:
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor(Neosmartpen.Net.IPenController)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(Neosmartpen.Net.Bluetooth.PenInformation)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(System.String)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic(Neosmartpen.Net.Bluetooth.PenInformation)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice(System.String)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress(System.String)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing(Neosmartpen.Net.Bluetooth.PenInformation)
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write(System.Byte[])
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onAddPenController
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onStopSearch
  - Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onUpdatePenController
  langs:
  - csharp
  - vb
  name: GenericBluetoothPenClient
  nameWithType: GenericBluetoothPenClient
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  type: Class
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GenericBluetoothPenClient
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 17
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: >-
    It provides client connectivity for common Bluetooth network services.

    (We recommend using this class under normal circumstances.)
  example: []
  syntax:
    content: public class GenericBluetoothPenClient
    content.vb: Public Class GenericBluetoothPenClient
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
  commentId: P:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
  id: PenController
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: PenController
  nameWithType: GenericBluetoothPenClient.PenController
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: PenController
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 25
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: It provides client connectivity for common Bluetooth network services.
  example: []
  syntax:
    content: public IPenController PenController { get; set; }
    parameters: []
    return:
      type: Neosmartpen.Net.IPenController
    content.vb: Public Property PenController As IPenController
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
  commentId: P:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
  id: Name
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GenericBluetoothPenClient.Name
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Name
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 27
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
  commentId: P:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
  id: Alive
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Alive
  nameWithType: GenericBluetoothPenClient.Alive
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Alive
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 32
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Indicates whether the pen is currently connected.
  example: []
  syntax:
    content: public bool Alive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Alive As Boolean
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
  commentId: P:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
  id: ConnectedDeviceIsLe
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: ConnectedDeviceIsLe
  nameWithType: GenericBluetoothPenClient.ConnectedDeviceIsLe
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
  type: Property
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: ConnectedDeviceIsLe
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 43
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Indicates whether the currently connected pen is bluetooth low energy.
  example: []
  syntax:
    content: public bool ConnectedDeviceIsLe { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ConnectedDeviceIsLe As Boolean
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor(Neosmartpen.Net.IPenController)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor(Neosmartpen.Net.IPenController)
  id: '#ctor(Neosmartpen.Net.IPenController)'
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: GenericBluetoothPenClient(IPenController)
  nameWithType: GenericBluetoothPenClient.GenericBluetoothPenClient(IPenController)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GenericBluetoothPenClient(Neosmartpen.Net.IPenController)
  type: Constructor
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: .ctor
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 48
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  syntax:
    content: public GenericBluetoothPenClient(IPenController penCtrl)
    parameters:
    - id: penCtrl
      type: Neosmartpen.Net.IPenController
    content.vb: Public Sub New(penCtrl As IPenController)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor*
  nameWithType.vb: GenericBluetoothPenClient.New(IPenController)
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.New(Neosmartpen.Net.IPenController)
  name.vb: New(IPenController)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose
  id: Dispose
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GenericBluetoothPenClient.Dispose()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Dispose
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 78
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter
  id: GetBluetoothAdapter
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: GetBluetoothAdapter()
  nameWithType: GenericBluetoothPenClient.GetBluetoothAdapter()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GetBluetoothAdapter
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 91
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Get the BluetoothAdapter object.
  example: []
  syntax:
    content: public Task<BluetoothAdapter> GetBluetoothAdapter()
    return:
      type: System.Threading.Tasks.Task{Windows.Devices.Bluetooth.BluetoothAdapter}
      description: instance of BluetoothAdapter
    content.vb: Public Function GetBluetoothAdapter() As Task(Of BluetoothAdapter)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
  id: GetBluetoothIsEnabledAsync
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: GetBluetoothIsEnabledAsync()
  nameWithType: GenericBluetoothPenClient.GetBluetoothIsEnabledAsync()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GetBluetoothIsEnabledAsync
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 112
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Indicates whether the system can use Bluetooth.
  example: []
  syntax:
    content: public Task<bool> GetBluetoothIsEnabledAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True or false if Bluetooth is available
    content.vb: Public Function GetBluetoothIsEnabledAsync() As Task(Of Boolean)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(Neosmartpen.Net.Bluetooth.PenInformation)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(Neosmartpen.Net.Bluetooth.PenInformation)
  id: Connect(Neosmartpen.Net.Bluetooth.PenInformation)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Connect(PenInformation)
  nameWithType: GenericBluetoothPenClient.Connect(PenInformation)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(Neosmartpen.Net.Bluetooth.PenInformation)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Connect
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 140
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Try to connect with the pen.
  example: []
  syntax:
    content: public Task<bool> Connect(PenInformation penInformation)
    parameters:
    - id: penInformation
      type: Neosmartpen.Net.Bluetooth.PenInformation
      description: PenInformation instance that holds the pen's information
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True or false if the connection is successful
    content.vb: Public Function Connect(penInformation As PenInformation) As Task(Of Boolean)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic(Neosmartpen.Net.Bluetooth.PenInformation)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic(Neosmartpen.Net.Bluetooth.PenInformation)
  id: ConnectByClassic(Neosmartpen.Net.Bluetooth.PenInformation)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: ConnectByClassic(PenInformation)
  nameWithType: GenericBluetoothPenClient.ConnectByClassic(PenInformation)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic(Neosmartpen.Net.Bluetooth.PenInformation)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: ConnectByClassic
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 175
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Try to connect with the pen in the bluetooth classic way.
  example: []
  syntax:
    content: public Task<bool> ConnectByClassic(PenInformation penInformation)
    parameters:
    - id: penInformation
      type: Neosmartpen.Net.Bluetooth.PenInformation
      description: PenInformation instance that holds the pen's information
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True or false if the connection is successful
    content.vb: Public Function ConnectByClassic(penInformation As PenInformation) As Task(Of Boolean)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(System.String)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(System.String)
  id: Connect(System.String)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Connect(string)
  nameWithType: GenericBluetoothPenClient.Connect(string)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Connect
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 201
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Try to connect with the pen.
  example: []
  syntax:
    content: public Task<bool> Connect(string macAddress)
    parameters:
    - id: macAddress
      type: System.String
      description: Mac address of the pen to connect
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True or false if the connection is successful
    content.vb: Public Function Connect(macAddress As String) As Task(Of Boolean)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect*
  nameWithType.vb: GenericBluetoothPenClient.Connect(String)
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect(String)
  name.vb: Connect(String)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress(System.String)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress(System.String)
  id: GetPenInformationByAddress(System.String)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: GetPenInformationByAddress(string)
  nameWithType: GenericBluetoothPenClient.GetPenInformationByAddress(string)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: GetPenInformationByAddress
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 238
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Get the information of the pen to the pen's mac address.
  example: []
  syntax:
    content: public PenInformation GetPenInformationByAddress(string macAddress)
    parameters:
    - id: macAddress
      type: System.String
      description: Mac address of the pen to get the information.
    return:
      type: Neosmartpen.Net.Bluetooth.PenInformation
      description: PenInformation instance that holds the pen's information
    content.vb: Public Function GetPenInformationByAddress(macAddress As String) As PenInformation
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress*
  nameWithType.vb: GenericBluetoothPenClient.GetPenInformationByAddress(String)
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress(String)
  name.vb: GetPenInformationByAddress(String)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect
  id: Disconnect
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: GenericBluetoothPenClient.Disconnect()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Disconnect
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 247
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Disconnect the pen.
  example: []
  syntax:
    content: public Task Disconnect()
    return:
      type: System.Threading.Tasks.Task
      description: True if disconnected false if failed
    content.vb: Public Function Disconnect() As Task
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices
  id: FindDevices
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: FindDevices()
  nameWithType: GenericBluetoothPenClient.FindDevices()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FindDevices
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 263
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Discovers accessible smartpen device, both paired and in-range.
  example: []
  syntax:
    content: public Task<List<PenInformation>> FindDevices()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Neosmartpen.Net.Bluetooth.PenInformation}}
      description: When this method completes successfully, it returns a List of PenInformation that represents the specified pen
    content.vb: Public Function FindDevices() As Task(Of List(Of PenInformation))
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices
  id: FindPairedDevices
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: FindPairedDevices()
  nameWithType: GenericBluetoothPenClient.FindPairedDevices()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FindPairedDevices
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 272
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: To gets list of paired device
  example: []
  syntax:
    content: public Task<List<PenInformation>> FindPairedDevices()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{Neosmartpen.Net.Bluetooth.PenInformation}}
      description: When this method completes successfully, it returns a List of PenInformation that represents the specified pen
    content.vb: Public Function FindPairedDevices() As Task(Of List(Of PenInformation))
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice(System.String)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice(System.String)
  id: FindUnpairedDevice(System.String)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: FindUnpairedDevice(string)
  nameWithType: GenericBluetoothPenClient.FindUnpairedDevice(string)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice(string)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: FindUnpairedDevice
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 281
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: To gets list of unpaired device
  example: []
  syntax:
    content: public Task<PenInformation> FindUnpairedDevice(string macAddress)
    parameters:
    - id: macAddress
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Neosmartpen.Net.Bluetooth.PenInformation}
      description: When this method completes successfully, it returns a List of PenInformation that represents the specified pen
    content.vb: Public Function FindUnpairedDevice(macAddress As String) As Task(Of PenInformation)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice*
  nameWithType.vb: GenericBluetoothPenClient.FindUnpairedDevice(String)
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice(String)
  name.vb: FindUnpairedDevice(String)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing(Neosmartpen.Net.Bluetooth.PenInformation)
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing(Neosmartpen.Net.Bluetooth.PenInformation)
  id: UnPairing(Neosmartpen.Net.Bluetooth.PenInformation)
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: UnPairing(PenInformation)
  nameWithType: GenericBluetoothPenClient.UnPairing(PenInformation)
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing(Neosmartpen.Net.Bluetooth.PenInformation)
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: UnPairing
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 291
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: To conduct unpairing with the specified device
  example: []
  syntax:
    content: public Task<bool> UnPairing(PenInformation penInformation)
    parameters:
    - id: penInformation
      type: Neosmartpen.Net.Bluetooth.PenInformation
      description: The instance of PenInformation class
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: When this method completes successfully, it returns a boolean result
    content.vb: Public Function UnPairing(penInformation As PenInformation) As Task(Of Boolean)
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind
  id: Unbind
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Unbind()
  nameWithType: GenericBluetoothPenClient.Unbind()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Unbind
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 296
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: unbind a socket instance
  example: []
  syntax:
    content: public Task Unbind()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function Unbind() As Task
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write(System.Byte[])
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Write(byte[])
  nameWithType: GenericBluetoothPenClient.Write(byte[])
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write(byte[])
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Write
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 301
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: To write data to stream
  example: []
  syntax:
    content: public void Write(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
      description: ''
    content.vb: Public Sub Write(data As Byte())
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write*
  nameWithType.vb: GenericBluetoothPenClient.Write(Byte())
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write(Byte())
  name.vb: Write(Byte())
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read
  id: Read
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: GenericBluetoothPenClient.Read()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: Read
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 306
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: To read data when device write something
  example: []
  syntax:
    content: public void Read()
    content.vb: Public Sub Read()
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onAddPenController
  commentId: E:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onAddPenController
  id: onAddPenController
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: onAddPenController
  nameWithType: GenericBluetoothPenClient.onAddPenController
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onAddPenController
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: onAddPenController
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 314
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Notification for new Bluetooth LE advertisement events received.
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, PenInformation> onAddPenController
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenInformation}
    content.vb: Public Event onAddPenController As TypedEventHandler(Of IPenClient, PenInformation)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onUpdatePenController
  commentId: E:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onUpdatePenController
  id: onUpdatePenController
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: onUpdatePenController
  nameWithType: GenericBluetoothPenClient.onUpdatePenController
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onUpdatePenController
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: onUpdatePenController
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 319
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Notification for updated Bluetooth LE advertisement events received.
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, PenUpdateInformation> onUpdatePenController
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenUpdateInformation}
    content.vb: Public Event onUpdatePenController As TypedEventHandler(Of IPenClient, PenUpdateInformation)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onStopSearch
  commentId: E:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onStopSearch
  id: onStopSearch
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: onStopSearch
  nameWithType: GenericBluetoothPenClient.onStopSearch
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.onStopSearch
  type: Event
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: onStopSearch
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 324
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Notification to the app that the Bluetooth LE scanning for advertisements has been cancelled or aborted either by the app or due to an error.
  example: []
  syntax:
    content: public event TypedEventHandler<IPenClient, BluetoothError> onStopSearch
    return:
      type: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Windows.Devices.Bluetooth.BluetoothError}
    content.vb: Public Event onStopSearch As TypedEventHandler(Of IPenClient, BluetoothError)
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher
  id: StartLEAdvertisementWatcher
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: StartLEAdvertisementWatcher()
  nameWithType: GenericBluetoothPenClient.StartLEAdvertisementWatcher()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: StartLEAdvertisementWatcher
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 329
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Start searching for Bluetooth Le advertisements.
  example: []
  syntax:
    content: public void StartLEAdvertisementWatcher()
    content.vb: Public Sub StartLEAdvertisementWatcher()
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher*
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher
  commentId: M:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher
  id: StopLEAdvertisementWatcher
  parent: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient
  langs:
  - csharp
  - vb
  name: StopLEAdvertisementWatcher()
  nameWithType: GenericBluetoothPenClient.StopLEAdvertisementWatcher()
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher()
  type: Method
  source:
    remote:
      path: Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
      branch: le-integration
      repo: https://github.com/NeoSmartpen/Windows-SDK2.0.git
    id: StopLEAdvertisementWatcher
    path: ../Neosmartpen.Net/Neosmartpen/Implementation/Net/Bluetooth/GenericBluetoothPenClient.cs
    startLine: 337
  assemblies:
  - Neosmartpen.Net
  namespace: Neosmartpen.Net.Bluetooth
  summary: Stop searching for Bluetooth Le advertisements.
  example: []
  syntax:
    content: public void StopLEAdvertisementWatcher()
    content.vb: Public Sub StopLEAdvertisementWatcher()
  overload: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher*
references:
- uid: Neosmartpen.Net.Bluetooth
  commentId: N:Neosmartpen.Net.Bluetooth
  href: Neosmartpen.html
  name: Neosmartpen.Net.Bluetooth
  nameWithType: Neosmartpen.Net.Bluetooth
  fullName: Neosmartpen.Net.Bluetooth
  spec.csharp:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
  - name: .
  - uid: Neosmartpen.Net.Bluetooth
    name: Bluetooth
    href: Neosmartpen.Net.Bluetooth.html
  spec.vb:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
  - name: .
  - uid: Neosmartpen.Net.Bluetooth
    name: Bluetooth
    href: Neosmartpen.Net.Bluetooth.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_PenController
  name: PenController
  nameWithType: GenericBluetoothPenClient.PenController
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.PenController
- uid: Neosmartpen.Net.IPenController
  commentId: T:Neosmartpen.Net.IPenController
  parent: Neosmartpen.Net
  href: Neosmartpen.Net.IPenController.html
  name: IPenController
  nameWithType: IPenController
  fullName: Neosmartpen.Net.IPenController
- uid: Neosmartpen.Net
  commentId: N:Neosmartpen.Net
  href: Neosmartpen.html
  name: Neosmartpen.Net
  nameWithType: Neosmartpen.Net
  fullName: Neosmartpen.Net
  spec.csharp:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
  spec.vb:
  - uid: Neosmartpen
    name: Neosmartpen
    href: Neosmartpen.html
  - name: .
  - uid: Neosmartpen.Net
    name: Net
    href: Neosmartpen.Net.html
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Name
  name: Name
  nameWithType: GenericBluetoothPenClient.Name
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Alive
  name: Alive
  nameWithType: GenericBluetoothPenClient.Alive
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Alive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_ConnectedDeviceIsLe
  name: ConnectedDeviceIsLe
  nameWithType: GenericBluetoothPenClient.ConnectedDeviceIsLe
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectedDeviceIsLe
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.#ctor
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient__ctor_Neosmartpen_Net_IPenController_
  name: GenericBluetoothPenClient
  nameWithType: GenericBluetoothPenClient.GenericBluetoothPenClient
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GenericBluetoothPenClient
  nameWithType.vb: GenericBluetoothPenClient.New
  fullName.vb: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.New
  name.vb: New
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Dispose
  name: Dispose
  nameWithType: GenericBluetoothPenClient.Dispose
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Dispose
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_GetBluetoothAdapter
  name: GetBluetoothAdapter
  nameWithType: GenericBluetoothPenClient.GetBluetoothAdapter
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothAdapter
- uid: System.Threading.Tasks.Task{Windows.Devices.Bluetooth.BluetoothAdapter}
  commentId: T:System.Threading.Tasks.Task{Windows.Devices.Bluetooth.BluetoothAdapter}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BluetoothAdapter>
  nameWithType: Task<BluetoothAdapter>
  fullName: System.Threading.Tasks.Task<Windows.Devices.Bluetooth.BluetoothAdapter>
  nameWithType.vb: Task(Of BluetoothAdapter)
  fullName.vb: System.Threading.Tasks.Task(Of Windows.Devices.Bluetooth.BluetoothAdapter)
  name.vb: Task(Of BluetoothAdapter)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Windows.Devices.Bluetooth.BluetoothAdapter
    name: BluetoothAdapter
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Windows.Devices.Bluetooth.BluetoothAdapter
    name: BluetoothAdapter
    isExternal: true
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_GetBluetoothIsEnabledAsync
  name: GetBluetoothIsEnabledAsync
  nameWithType: GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetBluetoothIsEnabledAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Connect_Neosmartpen_Net_Bluetooth_PenInformation_
  name: Connect
  nameWithType: GenericBluetoothPenClient.Connect
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Connect
- uid: Neosmartpen.Net.Bluetooth.PenInformation
  commentId: T:Neosmartpen.Net.Bluetooth.PenInformation
  parent: Neosmartpen.Net.Bluetooth
  href: Neosmartpen.Net.Bluetooth.PenInformation.html
  name: PenInformation
  nameWithType: PenInformation
  fullName: Neosmartpen.Net.Bluetooth.PenInformation
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_ConnectByClassic_Neosmartpen_Net_Bluetooth_PenInformation_
  name: ConnectByClassic
  nameWithType: GenericBluetoothPenClient.ConnectByClassic
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.ConnectByClassic
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_GetPenInformationByAddress_System_String_
  name: GetPenInformationByAddress
  nameWithType: GenericBluetoothPenClient.GetPenInformationByAddress
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.GetPenInformationByAddress
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Disconnect
  name: Disconnect
  nameWithType: GenericBluetoothPenClient.Disconnect
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Disconnect
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_FindDevices
  name: FindDevices
  nameWithType: GenericBluetoothPenClient.FindDevices
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindDevices
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{Neosmartpen.Net.Bluetooth.PenInformation}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{Neosmartpen.Net.Bluetooth.PenInformation}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<PenInformation>>
  nameWithType: Task<List<PenInformation>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<Neosmartpen.Net.Bluetooth.PenInformation>>
  nameWithType.vb: Task(Of List(Of PenInformation))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Neosmartpen.Net.Bluetooth.PenInformation))
  name.vb: Task(Of List(Of PenInformation))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: )
  - name: )
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_FindPairedDevices
  name: FindPairedDevices
  nameWithType: GenericBluetoothPenClient.FindPairedDevices
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindPairedDevices
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_FindUnpairedDevice_System_String_
  name: FindUnpairedDevice
  nameWithType: GenericBluetoothPenClient.FindUnpairedDevice
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.FindUnpairedDevice
- uid: System.Threading.Tasks.Task{Neosmartpen.Net.Bluetooth.PenInformation}
  commentId: T:System.Threading.Tasks.Task{Neosmartpen.Net.Bluetooth.PenInformation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PenInformation>
  nameWithType: Task<PenInformation>
  fullName: System.Threading.Tasks.Task<Neosmartpen.Net.Bluetooth.PenInformation>
  nameWithType.vb: Task(Of PenInformation)
  fullName.vb: System.Threading.Tasks.Task(Of Neosmartpen.Net.Bluetooth.PenInformation)
  name.vb: Task(Of PenInformation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: )
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_UnPairing_Neosmartpen_Net_Bluetooth_PenInformation_
  name: UnPairing
  nameWithType: GenericBluetoothPenClient.UnPairing
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.UnPairing
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Unbind
  name: Unbind
  nameWithType: GenericBluetoothPenClient.Unbind
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Unbind
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Write_System_Byte___
  name: Write
  nameWithType: GenericBluetoothPenClient.Write
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Write
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_Read
  name: Read
  nameWithType: GenericBluetoothPenClient.Read
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.Read
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenInformation}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenInformation}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, PenInformation>
  nameWithType: TypedEventHandler<IPenClient, PenInformation>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.Bluetooth.PenInformation>
  nameWithType.vb: TypedEventHandler(Of IPenClient, PenInformation)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.Bluetooth.PenInformation)
  name.vb: TypedEventHandler(Of IPenClient, PenInformation)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenInformation
    name: PenInformation
    href: Neosmartpen.Net.Bluetooth.PenInformation.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler`2
  commentId: T:Windows.Foundation.TypedEventHandler`2
  isExternal: true
  name: TypedEventHandler<TSender, TResult>
  nameWithType: TypedEventHandler<TSender, TResult>
  fullName: Windows.Foundation.TypedEventHandler<TSender, TResult>
  nameWithType.vb: TypedEventHandler(Of TSender, TResult)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of TSender, TResult)
  name.vb: TypedEventHandler(Of TSender, TResult)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - name: TSender
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSender
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: Windows.Foundation
  commentId: N:Windows.Foundation
  isExternal: true
  name: Windows.Foundation
  nameWithType: Windows.Foundation
  fullName: Windows.Foundation
  spec.csharp:
  - uid: Windows
    name: Windows
    isExternal: true
  - name: .
  - uid: Windows.Foundation
    name: Foundation
    isExternal: true
  spec.vb:
  - uid: Windows
    name: Windows
    isExternal: true
  - name: .
  - uid: Windows.Foundation
    name: Foundation
    isExternal: true
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenUpdateInformation}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Neosmartpen.Net.Bluetooth.PenUpdateInformation}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, PenUpdateInformation>
  nameWithType: TypedEventHandler<IPenClient, PenUpdateInformation>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Neosmartpen.Net.Bluetooth.PenUpdateInformation>
  nameWithType.vb: TypedEventHandler(Of IPenClient, PenUpdateInformation)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Neosmartpen.Net.Bluetooth.PenUpdateInformation)
  name.vb: TypedEventHandler(Of IPenClient, PenUpdateInformation)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenUpdateInformation
    name: PenUpdateInformation
    href: Neosmartpen.Net.Bluetooth.PenUpdateInformation.html
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Neosmartpen.Net.Bluetooth.PenUpdateInformation
    name: PenUpdateInformation
    href: Neosmartpen.Net.Bluetooth.PenUpdateInformation.html
  - name: )
- uid: Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Windows.Devices.Bluetooth.BluetoothError}
  commentId: T:Windows.Foundation.TypedEventHandler{Neosmartpen.Net.IPenClient,Windows.Devices.Bluetooth.BluetoothError}
  parent: Windows.Foundation
  definition: Windows.Foundation.TypedEventHandler`2
  href: Neosmartpen.Net.IPenClient.html
  name: TypedEventHandler<IPenClient, BluetoothError>
  nameWithType: TypedEventHandler<IPenClient, BluetoothError>
  fullName: Windows.Foundation.TypedEventHandler<Neosmartpen.Net.IPenClient, Windows.Devices.Bluetooth.BluetoothError>
  nameWithType.vb: TypedEventHandler(Of IPenClient, BluetoothError)
  fullName.vb: Windows.Foundation.TypedEventHandler(Of Neosmartpen.Net.IPenClient, Windows.Devices.Bluetooth.BluetoothError)
  name.vb: TypedEventHandler(Of IPenClient, BluetoothError)
  spec.csharp:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: <
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Windows.Devices.Bluetooth.BluetoothError
    name: BluetoothError
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: Windows.Foundation.TypedEventHandler`2
    name: TypedEventHandler
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: Neosmartpen.Net.IPenClient
    name: IPenClient
    href: Neosmartpen.Net.IPenClient.html
  - name: ','
  - name: " "
  - uid: Windows.Devices.Bluetooth.BluetoothError
    name: BluetoothError
    isExternal: true
  - name: )
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_StartLEAdvertisementWatcher
  name: StartLEAdvertisementWatcher
  nameWithType: GenericBluetoothPenClient.StartLEAdvertisementWatcher
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StartLEAdvertisementWatcher
- uid: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher*
  commentId: Overload:Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher
  href: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.html#Neosmartpen_Net_Bluetooth_GenericBluetoothPenClient_StopLEAdvertisementWatcher
  name: StopLEAdvertisementWatcher
  nameWithType: GenericBluetoothPenClient.StopLEAdvertisementWatcher
  fullName: Neosmartpen.Net.Bluetooth.GenericBluetoothPenClient.StopLEAdvertisementWatcher
shouldSkipMarkup: true
